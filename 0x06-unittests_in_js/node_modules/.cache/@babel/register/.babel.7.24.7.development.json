{"{\"assumptions\":{},\"sourceRoot\":\"/alx-backend-javascript/0x06-unittests_in_js/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"filename\":\"/alx-backend-javascript/0x06-unittests_in_js/0-calcul.test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.7:development":{"value":{"code":"const assert = require('assert');\nconst calculateNumber = require('./0-calcul');\n\n/**\n * Test suite for the calculateNumber function.\n */\ndescribe('calculateNumber', () => {\n  /**\n   * Test case to check the function when both inputs are integers.\n   */\n  it('should return 4 when inputs are 1 and 3', () => {\n    assert.strictEqual(calculateNumber(1, 3), 4);\n  });\n\n  /**\n   * Test case to check the function when the second input is a float.\n   */\n  it('should return 5 when inputs are 1 and 3.7', () => {\n    assert.strictEqual(calculateNumber(1, 3.7), 5);\n  });\n\n  /**\n   * Test case to check the function when both inputs are floats.\n   */\n  it('should return 5 when inputs are 1.2 and 3.7', () => {\n    assert.strictEqual(calculateNumber(1.2, 3.7), 5);\n  });\n\n  /**\n   * Test case to check the function when both inputs are rounded up.\n   */\n  it('should return 6 when inputs are 1.5 and 3.7', () => {\n    assert.strictEqual(calculateNumber(1.5, 3.7), 6);\n  });\n\n  /**\n   * Test case to check the function when both inputs round to 0.\n   */\n  it('should return 0 when inputs are 0.1 and 0.3', () => {\n    assert.strictEqual(calculateNumber(0.1, 0.3), 0);\n  });\n\n  /**\n   * Test case to check the function with negative numbers.\n   */\n  it('should return -2 when inputs are -1.4 and -0.7', () => {\n    assert.strictEqual(calculateNumber(-1.4, -0.7), -2);\n  });\n\n  /**\n   * Test case to check the function when the first input rounds down and the second input rounds up.\n   */\n  it('should return 2 when inputs are 1.4 and 0.5', () => {\n    assert.strictEqual(calculateNumber(1.4, 0.5), 2);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhc3NlcnQiLCJyZXF1aXJlIiwiY2FsY3VsYXRlTnVtYmVyIiwiZGVzY3JpYmUiLCJpdCIsInN0cmljdEVxdWFsIl0sInNvdXJjZVJvb3QiOiIvYWx4LWJhY2tlbmQtamF2YXNjcmlwdC8weDA2LXVuaXR0ZXN0c19pbl9qcy8iLCJzb3VyY2VzIjpbIjAtY2FsY3VsLnRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYXNzZXJ0ID0gcmVxdWlyZSgnYXNzZXJ0Jyk7XG5jb25zdCBjYWxjdWxhdGVOdW1iZXIgPSByZXF1aXJlKCcuLzAtY2FsY3VsJyk7XG5cbi8qKlxuICogVGVzdCBzdWl0ZSBmb3IgdGhlIGNhbGN1bGF0ZU51bWJlciBmdW5jdGlvbi5cbiAqL1xuZGVzY3JpYmUoJ2NhbGN1bGF0ZU51bWJlcicsICgpID0+IHtcbiAgLyoqXG4gICAqIFRlc3QgY2FzZSB0byBjaGVjayB0aGUgZnVuY3Rpb24gd2hlbiBib3RoIGlucHV0cyBhcmUgaW50ZWdlcnMuXG4gICAqL1xuICBpdCgnc2hvdWxkIHJldHVybiA0IHdoZW4gaW5wdXRzIGFyZSAxIGFuZCAzJywgKCkgPT4ge1xuICAgIGFzc2VydC5zdHJpY3RFcXVhbChjYWxjdWxhdGVOdW1iZXIoMSwgMyksIDQpO1xuICB9KTtcblxuICAvKipcbiAgICogVGVzdCBjYXNlIHRvIGNoZWNrIHRoZSBmdW5jdGlvbiB3aGVuIHRoZSBzZWNvbmQgaW5wdXQgaXMgYSBmbG9hdC5cbiAgICovXG4gIGl0KCdzaG91bGQgcmV0dXJuIDUgd2hlbiBpbnB1dHMgYXJlIDEgYW5kIDMuNycsICgpID0+IHtcbiAgICBhc3NlcnQuc3RyaWN0RXF1YWwoY2FsY3VsYXRlTnVtYmVyKDEsIDMuNyksIDUpO1xuICB9KTtcblxuICAvKipcbiAgICogVGVzdCBjYXNlIHRvIGNoZWNrIHRoZSBmdW5jdGlvbiB3aGVuIGJvdGggaW5wdXRzIGFyZSBmbG9hdHMuXG4gICAqL1xuICBpdCgnc2hvdWxkIHJldHVybiA1IHdoZW4gaW5wdXRzIGFyZSAxLjIgYW5kIDMuNycsICgpID0+IHtcbiAgICBhc3NlcnQuc3RyaWN0RXF1YWwoY2FsY3VsYXRlTnVtYmVyKDEuMiwgMy43KSwgNSk7XG4gIH0pO1xuXG4gIC8qKlxuICAgKiBUZXN0IGNhc2UgdG8gY2hlY2sgdGhlIGZ1bmN0aW9uIHdoZW4gYm90aCBpbnB1dHMgYXJlIHJvdW5kZWQgdXAuXG4gICAqL1xuICBpdCgnc2hvdWxkIHJldHVybiA2IHdoZW4gaW5wdXRzIGFyZSAxLjUgYW5kIDMuNycsICgpID0+IHtcbiAgICBhc3NlcnQuc3RyaWN0RXF1YWwoY2FsY3VsYXRlTnVtYmVyKDEuNSwgMy43KSwgNik7XG4gIH0pO1xuXG4gIC8qKlxuICAgKiBUZXN0IGNhc2UgdG8gY2hlY2sgdGhlIGZ1bmN0aW9uIHdoZW4gYm90aCBpbnB1dHMgcm91bmQgdG8gMC5cbiAgICovXG4gIGl0KCdzaG91bGQgcmV0dXJuIDAgd2hlbiBpbnB1dHMgYXJlIDAuMSBhbmQgMC4zJywgKCkgPT4ge1xuICAgIGFzc2VydC5zdHJpY3RFcXVhbChjYWxjdWxhdGVOdW1iZXIoMC4xLCAwLjMpLCAwKTtcbiAgfSk7XG5cbiAgLyoqXG4gICAqIFRlc3QgY2FzZSB0byBjaGVjayB0aGUgZnVuY3Rpb24gd2l0aCBuZWdhdGl2ZSBudW1iZXJzLlxuICAgKi9cbiAgaXQoJ3Nob3VsZCByZXR1cm4gLTIgd2hlbiBpbnB1dHMgYXJlIC0xLjQgYW5kIC0wLjcnLCAoKSA9PiB7XG4gICAgYXNzZXJ0LnN0cmljdEVxdWFsKGNhbGN1bGF0ZU51bWJlcigtMS40LCAtMC43KSwgLTIpO1xuICB9KTtcblxuICAvKipcbiAgICogVGVzdCBjYXNlIHRvIGNoZWNrIHRoZSBmdW5jdGlvbiB3aGVuIHRoZSBmaXJzdCBpbnB1dCByb3VuZHMgZG93biBhbmQgdGhlIHNlY29uZCBpbnB1dCByb3VuZHMgdXAuXG4gICAqL1xuICBpdCgnc2hvdWxkIHJldHVybiAyIHdoZW4gaW5wdXRzIGFyZSAxLjQgYW5kIDAuNScsICgpID0+IHtcbiAgICBhc3NlcnQuc3RyaWN0RXF1YWwoY2FsY3VsYXRlTnVtYmVyKDEuNCwgMC41KSwgMik7XG4gIH0pO1xufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE1BQU0sR0FBR0MsT0FBTyxDQUFDLFFBQVEsQ0FBQztBQUNoQyxNQUFNQyxlQUFlLEdBQUdELE9BQU8sQ0FBQyxZQUFZLENBQUM7O0FBRTdDO0FBQ0E7QUFDQTtBQUNBRSxRQUFRLENBQUMsaUJBQWlCLEVBQUUsTUFBTTtFQUNoQztBQUNGO0FBQ0E7RUFDRUMsRUFBRSxDQUFDLHlDQUF5QyxFQUFFLE1BQU07SUFDbERKLE1BQU0sQ0FBQ0ssV0FBVyxDQUFDSCxlQUFlLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztFQUM5QyxDQUFDLENBQUM7O0VBRUY7QUFDRjtBQUNBO0VBQ0VFLEVBQUUsQ0FBQywyQ0FBMkMsRUFBRSxNQUFNO0lBQ3BESixNQUFNLENBQUNLLFdBQVcsQ0FBQ0gsZUFBZSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUM7RUFDaEQsQ0FBQyxDQUFDOztFQUVGO0FBQ0Y7QUFDQTtFQUNFRSxFQUFFLENBQUMsNkNBQTZDLEVBQUUsTUFBTTtJQUN0REosTUFBTSxDQUFDSyxXQUFXLENBQUNILGVBQWUsQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0VBQ2xELENBQUMsQ0FBQzs7RUFFRjtBQUNGO0FBQ0E7RUFDRUUsRUFBRSxDQUFDLDZDQUE2QyxFQUFFLE1BQU07SUFDdERKLE1BQU0sQ0FBQ0ssV0FBVyxDQUFDSCxlQUFlLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQztFQUNsRCxDQUFDLENBQUM7O0VBRUY7QUFDRjtBQUNBO0VBQ0VFLEVBQUUsQ0FBQyw2Q0FBNkMsRUFBRSxNQUFNO0lBQ3RESixNQUFNLENBQUNLLFdBQVcsQ0FBQ0gsZUFBZSxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUM7RUFDbEQsQ0FBQyxDQUFDOztFQUVGO0FBQ0Y7QUFDQTtFQUNFRSxFQUFFLENBQUMsZ0RBQWdELEVBQUUsTUFBTTtJQUN6REosTUFBTSxDQUFDSyxXQUFXLENBQUNILGVBQWUsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0VBQ3JELENBQUMsQ0FBQzs7RUFFRjtBQUNGO0FBQ0E7RUFDRUUsRUFBRSxDQUFDLDZDQUE2QyxFQUFFLE1BQU07SUFDdERKLE1BQU0sQ0FBQ0ssV0FBVyxDQUFDSCxlQUFlLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQztFQUNsRCxDQUFDLENBQUM7QUFDSixDQUFDLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=","map":{"version":3,"names":["assert","require","calculateNumber","describe","it","strictEqual"],"sourceRoot":"/alx-backend-javascript/0x06-unittests_in_js/","sources":["0-calcul.test.js"],"sourcesContent":["const assert = require('assert');\nconst calculateNumber = require('./0-calcul');\n\n/**\n * Test suite for the calculateNumber function.\n */\ndescribe('calculateNumber', () => {\n  /**\n   * Test case to check the function when both inputs are integers.\n   */\n  it('should return 4 when inputs are 1 and 3', () => {\n    assert.strictEqual(calculateNumber(1, 3), 4);\n  });\n\n  /**\n   * Test case to check the function when the second input is a float.\n   */\n  it('should return 5 when inputs are 1 and 3.7', () => {\n    assert.strictEqual(calculateNumber(1, 3.7), 5);\n  });\n\n  /**\n   * Test case to check the function when both inputs are floats.\n   */\n  it('should return 5 when inputs are 1.2 and 3.7', () => {\n    assert.strictEqual(calculateNumber(1.2, 3.7), 5);\n  });\n\n  /**\n   * Test case to check the function when both inputs are rounded up.\n   */\n  it('should return 6 when inputs are 1.5 and 3.7', () => {\n    assert.strictEqual(calculateNumber(1.5, 3.7), 6);\n  });\n\n  /**\n   * Test case to check the function when both inputs round to 0.\n   */\n  it('should return 0 when inputs are 0.1 and 0.3', () => {\n    assert.strictEqual(calculateNumber(0.1, 0.3), 0);\n  });\n\n  /**\n   * Test case to check the function with negative numbers.\n   */\n  it('should return -2 when inputs are -1.4 and -0.7', () => {\n    assert.strictEqual(calculateNumber(-1.4, -0.7), -2);\n  });\n\n  /**\n   * Test case to check the function when the first input rounds down and the second input rounds up.\n   */\n  it('should return 2 when inputs are 1.4 and 0.5', () => {\n    assert.strictEqual(calculateNumber(1.4, 0.5), 2);\n  });\n});\n"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAMC,eAAe,GAAGD,OAAO,CAAC,YAAY,CAAC;;AAE7C;AACA;AACA;AACAE,QAAQ,CAAC,iBAAiB,EAAE,MAAM;EAChC;AACF;AACA;EACEC,EAAE,CAAC,yCAAyC,EAAE,MAAM;IAClDJ,MAAM,CAACK,WAAW,CAACH,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9C,CAAC,CAAC;;EAEF;AACF;AACA;EACEE,EAAE,CAAC,2CAA2C,EAAE,MAAM;IACpDJ,MAAM,CAACK,WAAW,CAACH,eAAe,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;EAChD,CAAC,CAAC;;EAEF;AACF;AACA;EACEE,EAAE,CAAC,6CAA6C,EAAE,MAAM;IACtDJ,MAAM,CAACK,WAAW,CAACH,eAAe,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;EAClD,CAAC,CAAC;;EAEF;AACF;AACA;EACEE,EAAE,CAAC,6CAA6C,EAAE,MAAM;IACtDJ,MAAM,CAACK,WAAW,CAACH,eAAe,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;EAClD,CAAC,CAAC;;EAEF;AACF;AACA;EACEE,EAAE,CAAC,6CAA6C,EAAE,MAAM;IACtDJ,MAAM,CAACK,WAAW,CAACH,eAAe,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;EAClD,CAAC,CAAC;;EAEF;AACF;AACA;EACEE,EAAE,CAAC,gDAAgD,EAAE,MAAM;IACzDJ,MAAM,CAACK,WAAW,CAACH,eAAe,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;EACrD,CAAC,CAAC;;EAEF;AACF;AACA;EACEE,EAAE,CAAC,6CAA6C,EAAE,MAAM;IACtDJ,MAAM,CAACK,WAAW,CAACH,eAAe,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;EAClD,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}},"mtime":1718915564469},"{\"assumptions\":{},\"sourceRoot\":\"/alx-backend-javascript/0x06-unittests_in_js/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"filename\":\"/alx-backend-javascript/0x06-unittests_in_js/0-calcul.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.7:development":{"value":{"code":"/**\n * Function that rounds two numbers and returns their sum.\n * @param {number} a - The first number.\n * @param {number} b - The second number.\n * @returns {number} The sum of the rounded numbers.\n */\nfunction calculateNumber(a, b) {\n  return Math.round(a) + Math.round(b);\n}\nmodule.exports = calculateNumber;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjYWxjdWxhdGVOdW1iZXIiLCJhIiwiYiIsIk1hdGgiLCJyb3VuZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6Ii9hbHgtYmFja2VuZC1qYXZhc2NyaXB0LzB4MDYtdW5pdHRlc3RzX2luX2pzLyIsInNvdXJjZXMiOlsiMC1jYWxjdWwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBGdW5jdGlvbiB0aGF0IHJvdW5kcyB0d28gbnVtYmVycyBhbmQgcmV0dXJucyB0aGVpciBzdW0uXG4gKiBAcGFyYW0ge251bWJlcn0gYSAtIFRoZSBmaXJzdCBudW1iZXIuXG4gKiBAcGFyYW0ge251bWJlcn0gYiAtIFRoZSBzZWNvbmQgbnVtYmVyLlxuICogQHJldHVybnMge251bWJlcn0gVGhlIHN1bSBvZiB0aGUgcm91bmRlZCBudW1iZXJzLlxuICovXG5mdW5jdGlvbiBjYWxjdWxhdGVOdW1iZXIoYSwgYikge1xuICByZXR1cm4gTWF0aC5yb3VuZChhKSArIE1hdGgucm91bmQoYik7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY2FsY3VsYXRlTnVtYmVyO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTQSxlQUFlQSxDQUFDQyxDQUFDLEVBQUVDLENBQUMsRUFBRTtFQUM3QixPQUFPQyxJQUFJLENBQUNDLEtBQUssQ0FBQ0gsQ0FBQyxDQUFDLEdBQUdFLElBQUksQ0FBQ0MsS0FBSyxDQUFDRixDQUFDLENBQUM7QUFDdEM7QUFFQUcsTUFBTSxDQUFDQyxPQUFPLEdBQUdOLGVBQWUiLCJpZ25vcmVMaXN0IjpbXX0=","map":{"version":3,"names":["calculateNumber","a","b","Math","round","module","exports"],"sourceRoot":"/alx-backend-javascript/0x06-unittests_in_js/","sources":["0-calcul.js"],"sourcesContent":["/**\n * Function that rounds two numbers and returns their sum.\n * @param {number} a - The first number.\n * @param {number} b - The second number.\n * @returns {number} The sum of the rounded numbers.\n */\nfunction calculateNumber(a, b) {\n  return Math.round(a) + Math.round(b);\n}\n\nmodule.exports = calculateNumber;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,eAAeA,CAACC,CAAC,EAAEC,CAAC,EAAE;EAC7B,OAAOC,IAAI,CAACC,KAAK,CAACH,CAAC,CAAC,GAAGE,IAAI,CAACC,KAAK,CAACF,CAAC,CAAC;AACtC;AAEAG,MAAM,CAACC,OAAO,GAAGN,eAAe","ignoreList":[]}},"mtime":1718915522673},"{\"assumptions\":{},\"sourceRoot\":\"/alx-backend-javascript/0x06-unittests_in_js/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"filename\":\"/alx-backend-javascript/0x06-unittests_in_js/1-calcul.test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.7:development":{"value":{"code":"const assert = require('assert');\nconst calculateNumber = require('./1-calcul');\n\n/**\n * Test suite for the calculateNumber function.\n */\ndescribe('calculateNumber', () => {\n  describe('SUM', () => {\n    it('should return 6 when inputs are 1.4 and 4.5', () => {\n      assert.strictEqual(calculateNumber('SUM', 1.4, 4.5), 6);\n    });\n    it('should return 5 when inputs are 1.2 and 3.7', () => {\n      assert.strictEqual(calculateNumber('SUM', 1.2, 3.7), 5);\n    });\n  });\n  describe('SUBTRACT', () => {\n    it('should return -4 when inputs are 1.4 and 4.5', () => {\n      assert.strictEqual(calculateNumber('SUBTRACT', 1.4, 4.5), -4);\n    });\n    it('should return -3 when inputs are 1.2 and 3.7', () => {\n      assert.strictEqual(calculateNumber('SUBTRACT', 1.2, 3.7), -3);\n    });\n  });\n  describe('DIVIDE', () => {\n    it('should return 0.2 when inputs are 1.4 and 4.5', () => {\n      assert.strictEqual(calculateNumber('DIVIDE', 1.4, 4.5), 0.2);\n    });\n    it('should return \"Error\" when dividing by zero', () => {\n      assert.strictEqual(calculateNumber('DIVIDE', 1.4, 0), 'Error');\n    });\n    it('should return 0.5 when inputs are 1 and 2', () => {\n      assert.strictEqual(calculateNumber('DIVIDE', 1, 2), 0.5);\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhc3NlcnQiLCJyZXF1aXJlIiwiY2FsY3VsYXRlTnVtYmVyIiwiZGVzY3JpYmUiLCJpdCIsInN0cmljdEVxdWFsIl0sInNvdXJjZVJvb3QiOiIvYWx4LWJhY2tlbmQtamF2YXNjcmlwdC8weDA2LXVuaXR0ZXN0c19pbl9qcy8iLCJzb3VyY2VzIjpbIjEtY2FsY3VsLnRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYXNzZXJ0ID0gcmVxdWlyZSgnYXNzZXJ0Jyk7XG5jb25zdCBjYWxjdWxhdGVOdW1iZXIgPSByZXF1aXJlKCcuLzEtY2FsY3VsJyk7XG5cbi8qKlxuICogVGVzdCBzdWl0ZSBmb3IgdGhlIGNhbGN1bGF0ZU51bWJlciBmdW5jdGlvbi5cbiAqL1xuZGVzY3JpYmUoJ2NhbGN1bGF0ZU51bWJlcicsICgpID0+IHtcbiAgZGVzY3JpYmUoJ1NVTScsICgpID0+IHtcbiAgICBpdCgnc2hvdWxkIHJldHVybiA2IHdoZW4gaW5wdXRzIGFyZSAxLjQgYW5kIDQuNScsICgpID0+IHtcbiAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChjYWxjdWxhdGVOdW1iZXIoJ1NVTScsIDEuNCwgNC41KSwgNik7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIHJldHVybiA1IHdoZW4gaW5wdXRzIGFyZSAxLjIgYW5kIDMuNycsICgpID0+IHtcbiAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChjYWxjdWxhdGVOdW1iZXIoJ1NVTScsIDEuMiwgMy43KSwgNSk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCdTVUJUUkFDVCcsICgpID0+IHtcbiAgICBpdCgnc2hvdWxkIHJldHVybiAtNCB3aGVuIGlucHV0cyBhcmUgMS40IGFuZCA0LjUnLCAoKSA9PiB7XG4gICAgICBhc3NlcnQuc3RyaWN0RXF1YWwoY2FsY3VsYXRlTnVtYmVyKCdTVUJUUkFDVCcsIDEuNCwgNC41KSwgLTQpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCByZXR1cm4gLTMgd2hlbiBpbnB1dHMgYXJlIDEuMiBhbmQgMy43JywgKCkgPT4ge1xuICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKGNhbGN1bGF0ZU51bWJlcignU1VCVFJBQ1QnLCAxLjIsIDMuNyksIC0zKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgZGVzY3JpYmUoJ0RJVklERScsICgpID0+IHtcbiAgICBpdCgnc2hvdWxkIHJldHVybiAwLjIgd2hlbiBpbnB1dHMgYXJlIDEuNCBhbmQgNC41JywgKCkgPT4ge1xuICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKGNhbGN1bGF0ZU51bWJlcignRElWSURFJywgMS40LCA0LjUpLCAwLjIpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCByZXR1cm4gXCJFcnJvclwiIHdoZW4gZGl2aWRpbmcgYnkgemVybycsICgpID0+IHtcbiAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChjYWxjdWxhdGVOdW1iZXIoJ0RJVklERScsIDEuNCwgMCksICdFcnJvcicpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCByZXR1cm4gMC41IHdoZW4gaW5wdXRzIGFyZSAxIGFuZCAyJywgKCkgPT4ge1xuICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKGNhbGN1bGF0ZU51bWJlcignRElWSURFJywgMSwgMiksIDAuNSk7XG4gICAgfSk7XG4gIH0pO1xufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE1BQU0sR0FBR0MsT0FBTyxDQUFDLFFBQVEsQ0FBQztBQUNoQyxNQUFNQyxlQUFlLEdBQUdELE9BQU8sQ0FBQyxZQUFZLENBQUM7O0FBRTdDO0FBQ0E7QUFDQTtBQUNBRSxRQUFRLENBQUMsaUJBQWlCLEVBQUUsTUFBTTtFQUNoQ0EsUUFBUSxDQUFDLEtBQUssRUFBRSxNQUFNO0lBQ3BCQyxFQUFFLENBQUMsNkNBQTZDLEVBQUUsTUFBTTtNQUN0REosTUFBTSxDQUFDSyxXQUFXLENBQUNILGVBQWUsQ0FBQyxLQUFLLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUN6RCxDQUFDLENBQUM7SUFFRkUsRUFBRSxDQUFDLDZDQUE2QyxFQUFFLE1BQU07TUFDdERKLE1BQU0sQ0FBQ0ssV0FBVyxDQUFDSCxlQUFlLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDekQsQ0FBQyxDQUFDO0VBQ0osQ0FBQyxDQUFDO0VBRUZDLFFBQVEsQ0FBQyxVQUFVLEVBQUUsTUFBTTtJQUN6QkMsRUFBRSxDQUFDLDhDQUE4QyxFQUFFLE1BQU07TUFDdkRKLE1BQU0sQ0FBQ0ssV0FBVyxDQUFDSCxlQUFlLENBQUMsVUFBVSxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUMvRCxDQUFDLENBQUM7SUFFRkUsRUFBRSxDQUFDLDhDQUE4QyxFQUFFLE1BQU07TUFDdkRKLE1BQU0sQ0FBQ0ssV0FBVyxDQUFDSCxlQUFlLENBQUMsVUFBVSxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUMvRCxDQUFDLENBQUM7RUFDSixDQUFDLENBQUM7RUFFRkMsUUFBUSxDQUFDLFFBQVEsRUFBRSxNQUFNO0lBQ3ZCQyxFQUFFLENBQUMsK0NBQStDLEVBQUUsTUFBTTtNQUN4REosTUFBTSxDQUFDSyxXQUFXLENBQUNILGVBQWUsQ0FBQyxRQUFRLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxFQUFFLEdBQUcsQ0FBQztJQUM5RCxDQUFDLENBQUM7SUFFRkUsRUFBRSxDQUFDLDZDQUE2QyxFQUFFLE1BQU07TUFDdERKLE1BQU0sQ0FBQ0ssV0FBVyxDQUFDSCxlQUFlLENBQUMsUUFBUSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUMsRUFBRSxPQUFPLENBQUM7SUFDaEUsQ0FBQyxDQUFDO0lBRUZFLEVBQUUsQ0FBQywyQ0FBMkMsRUFBRSxNQUFNO01BQ3BESixNQUFNLENBQUNLLFdBQVcsQ0FBQ0gsZUFBZSxDQUFDLFFBQVEsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDO0lBQzFELENBQUMsQ0FBQztFQUNKLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["assert","require","calculateNumber","describe","it","strictEqual"],"sourceRoot":"/alx-backend-javascript/0x06-unittests_in_js/","sources":["1-calcul.test.js"],"sourcesContent":["const assert = require('assert');\nconst calculateNumber = require('./1-calcul');\n\n/**\n * Test suite for the calculateNumber function.\n */\ndescribe('calculateNumber', () => {\n  describe('SUM', () => {\n    it('should return 6 when inputs are 1.4 and 4.5', () => {\n      assert.strictEqual(calculateNumber('SUM', 1.4, 4.5), 6);\n    });\n\n    it('should return 5 when inputs are 1.2 and 3.7', () => {\n      assert.strictEqual(calculateNumber('SUM', 1.2, 3.7), 5);\n    });\n  });\n\n  describe('SUBTRACT', () => {\n    it('should return -4 when inputs are 1.4 and 4.5', () => {\n      assert.strictEqual(calculateNumber('SUBTRACT', 1.4, 4.5), -4);\n    });\n\n    it('should return -3 when inputs are 1.2 and 3.7', () => {\n      assert.strictEqual(calculateNumber('SUBTRACT', 1.2, 3.7), -3);\n    });\n  });\n\n  describe('DIVIDE', () => {\n    it('should return 0.2 when inputs are 1.4 and 4.5', () => {\n      assert.strictEqual(calculateNumber('DIVIDE', 1.4, 4.5), 0.2);\n    });\n\n    it('should return \"Error\" when dividing by zero', () => {\n      assert.strictEqual(calculateNumber('DIVIDE', 1.4, 0), 'Error');\n    });\n\n    it('should return 0.5 when inputs are 1 and 2', () => {\n      assert.strictEqual(calculateNumber('DIVIDE', 1, 2), 0.5);\n    });\n  });\n});\n"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAMC,eAAe,GAAGD,OAAO,CAAC,YAAY,CAAC;;AAE7C;AACA;AACA;AACAE,QAAQ,CAAC,iBAAiB,EAAE,MAAM;EAChCA,QAAQ,CAAC,KAAK,EAAE,MAAM;IACpBC,EAAE,CAAC,6CAA6C,EAAE,MAAM;MACtDJ,MAAM,CAACK,WAAW,CAACH,eAAe,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;IACzD,CAAC,CAAC;IAEFE,EAAE,CAAC,6CAA6C,EAAE,MAAM;MACtDJ,MAAM,CAACK,WAAW,CAACH,eAAe,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;IACzD,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFC,QAAQ,CAAC,UAAU,EAAE,MAAM;IACzBC,EAAE,CAAC,8CAA8C,EAAE,MAAM;MACvDJ,MAAM,CAACK,WAAW,CAACH,eAAe,CAAC,UAAU,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/D,CAAC,CAAC;IAEFE,EAAE,CAAC,8CAA8C,EAAE,MAAM;MACvDJ,MAAM,CAACK,WAAW,CAACH,eAAe,CAAC,UAAU,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/D,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFC,QAAQ,CAAC,QAAQ,EAAE,MAAM;IACvBC,EAAE,CAAC,+CAA+C,EAAE,MAAM;MACxDJ,MAAM,CAACK,WAAW,CAACH,eAAe,CAAC,QAAQ,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC;IAC9D,CAAC,CAAC;IAEFE,EAAE,CAAC,6CAA6C,EAAE,MAAM;MACtDJ,MAAM,CAACK,WAAW,CAACH,eAAe,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,OAAO,CAAC;IAChE,CAAC,CAAC;IAEFE,EAAE,CAAC,2CAA2C,EAAE,MAAM;MACpDJ,MAAM,CAACK,WAAW,CAACH,eAAe,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;IAC1D,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}},"mtime":1718916757188},"{\"assumptions\":{},\"sourceRoot\":\"/alx-backend-javascript/0x06-unittests_in_js/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"filename\":\"/alx-backend-javascript/0x06-unittests_in_js/1-calcul.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.7:development":{"value":{"code":"/**\n * Function that performs arithmetic operations on two rounded numbers.\n * @param {string} type - The type of operation (SUM, SUBTRACT, or DIVIDE).\n * @param {number} a - The first number.\n * @param {number} b - The second number.\n * @returns {number|string} The result of the operation or 'Error' if division by zero.\n */\nfunction calculateNumber(type, a, b) {\n  const roundedA = Math.round(a);\n  const roundedB = Math.round(b);\n  if (type === 'SUM') {\n    return roundedA + roundedB;\n  } else if (type === 'SUBTRACT') {\n    return roundedA - roundedB;\n  } else if (type === 'DIVIDE') {\n    if (roundedB === 0) {\n      return 'Error';\n    }\n    return roundedA / roundedB;\n  } else {\n    throw new Error('Invalid operation type');\n  }\n}\nmodule.exports = calculateNumber;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjYWxjdWxhdGVOdW1iZXIiLCJ0eXBlIiwiYSIsImIiLCJyb3VuZGVkQSIsIk1hdGgiLCJyb3VuZCIsInJvdW5kZWRCIiwiRXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIvYWx4LWJhY2tlbmQtamF2YXNjcmlwdC8weDA2LXVuaXR0ZXN0c19pbl9qcy8iLCJzb3VyY2VzIjpbIjEtY2FsY3VsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRnVuY3Rpb24gdGhhdCBwZXJmb3JtcyBhcml0aG1ldGljIG9wZXJhdGlvbnMgb24gdHdvIHJvdW5kZWQgbnVtYmVycy5cbiAqIEBwYXJhbSB7c3RyaW5nfSB0eXBlIC0gVGhlIHR5cGUgb2Ygb3BlcmF0aW9uIChTVU0sIFNVQlRSQUNULCBvciBESVZJREUpLlxuICogQHBhcmFtIHtudW1iZXJ9IGEgLSBUaGUgZmlyc3QgbnVtYmVyLlxuICogQHBhcmFtIHtudW1iZXJ9IGIgLSBUaGUgc2Vjb25kIG51bWJlci5cbiAqIEByZXR1cm5zIHtudW1iZXJ8c3RyaW5nfSBUaGUgcmVzdWx0IG9mIHRoZSBvcGVyYXRpb24gb3IgJ0Vycm9yJyBpZiBkaXZpc2lvbiBieSB6ZXJvLlxuICovXG5mdW5jdGlvbiBjYWxjdWxhdGVOdW1iZXIodHlwZSwgYSwgYikge1xuICBjb25zdCByb3VuZGVkQSA9IE1hdGgucm91bmQoYSk7XG4gIGNvbnN0IHJvdW5kZWRCID0gTWF0aC5yb3VuZChiKTtcblxuICBpZiAodHlwZSA9PT0gJ1NVTScpIHtcbiAgICByZXR1cm4gcm91bmRlZEEgKyByb3VuZGVkQjtcbiAgfSBlbHNlIGlmICh0eXBlID09PSAnU1VCVFJBQ1QnKSB7XG4gICAgcmV0dXJuIHJvdW5kZWRBIC0gcm91bmRlZEI7XG4gIH0gZWxzZSBpZiAodHlwZSA9PT0gJ0RJVklERScpIHtcbiAgICBpZiAocm91bmRlZEIgPT09IDApIHtcbiAgICAgIHJldHVybiAnRXJyb3InO1xuICAgIH1cbiAgICByZXR1cm4gcm91bmRlZEEgLyByb3VuZGVkQjtcbiAgfSBlbHNlIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgb3BlcmF0aW9uIHR5cGUnKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNhbGN1bGF0ZU51bWJlcjtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTQSxlQUFlQSxDQUFDQyxJQUFJLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFO0VBQ25DLE1BQU1DLFFBQVEsR0FBR0MsSUFBSSxDQUFDQyxLQUFLLENBQUNKLENBQUMsQ0FBQztFQUM5QixNQUFNSyxRQUFRLEdBQUdGLElBQUksQ0FBQ0MsS0FBSyxDQUFDSCxDQUFDLENBQUM7RUFFOUIsSUFBSUYsSUFBSSxLQUFLLEtBQUssRUFBRTtJQUNsQixPQUFPRyxRQUFRLEdBQUdHLFFBQVE7RUFDNUIsQ0FBQyxNQUFNLElBQUlOLElBQUksS0FBSyxVQUFVLEVBQUU7SUFDOUIsT0FBT0csUUFBUSxHQUFHRyxRQUFRO0VBQzVCLENBQUMsTUFBTSxJQUFJTixJQUFJLEtBQUssUUFBUSxFQUFFO0lBQzVCLElBQUlNLFFBQVEsS0FBSyxDQUFDLEVBQUU7TUFDbEIsT0FBTyxPQUFPO0lBQ2hCO0lBQ0EsT0FBT0gsUUFBUSxHQUFHRyxRQUFRO0VBQzVCLENBQUMsTUFBTTtJQUNMLE1BQU0sSUFBSUMsS0FBSyxDQUFDLHdCQUF3QixDQUFDO0VBQzNDO0FBQ0Y7QUFFQUMsTUFBTSxDQUFDQyxPQUFPLEdBQUdWLGVBQWUiLCJpZ25vcmVMaXN0IjpbXX0=","map":{"version":3,"names":["calculateNumber","type","a","b","roundedA","Math","round","roundedB","Error","module","exports"],"sourceRoot":"/alx-backend-javascript/0x06-unittests_in_js/","sources":["1-calcul.js"],"sourcesContent":["/**\n * Function that performs arithmetic operations on two rounded numbers.\n * @param {string} type - The type of operation (SUM, SUBTRACT, or DIVIDE).\n * @param {number} a - The first number.\n * @param {number} b - The second number.\n * @returns {number|string} The result of the operation or 'Error' if division by zero.\n */\nfunction calculateNumber(type, a, b) {\n  const roundedA = Math.round(a);\n  const roundedB = Math.round(b);\n\n  if (type === 'SUM') {\n    return roundedA + roundedB;\n  } else if (type === 'SUBTRACT') {\n    return roundedA - roundedB;\n  } else if (type === 'DIVIDE') {\n    if (roundedB === 0) {\n      return 'Error';\n    }\n    return roundedA / roundedB;\n  } else {\n    throw new Error('Invalid operation type');\n  }\n}\n\nmodule.exports = calculateNumber;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,eAAeA,CAACC,IAAI,EAAEC,CAAC,EAAEC,CAAC,EAAE;EACnC,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACJ,CAAC,CAAC;EAC9B,MAAMK,QAAQ,GAAGF,IAAI,CAACC,KAAK,CAACH,CAAC,CAAC;EAE9B,IAAIF,IAAI,KAAK,KAAK,EAAE;IAClB,OAAOG,QAAQ,GAAGG,QAAQ;EAC5B,CAAC,MAAM,IAAIN,IAAI,KAAK,UAAU,EAAE;IAC9B,OAAOG,QAAQ,GAAGG,QAAQ;EAC5B,CAAC,MAAM,IAAIN,IAAI,KAAK,QAAQ,EAAE;IAC5B,IAAIM,QAAQ,KAAK,CAAC,EAAE;MAClB,OAAO,OAAO;IAChB;IACA,OAAOH,QAAQ,GAAGG,QAAQ;EAC5B,CAAC,MAAM;IACL,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EAC3C;AACF;AAEAC,MAAM,CAACC,OAAO,GAAGV,eAAe","ignoreList":[]}},"mtime":1718926638442},"{\"assumptions\":{},\"sourceRoot\":\"/alx-backend-javascript/0x06-unittests_in_js/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"filename\":\"/alx-backend-javascript/0x06-unittests_in_js/2-calcul_chai.test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.7:development":{"value":{"code":"const {\n  expect\n} = require('chai');\nconst calculateNumber = require('./2-calcul_chai');\ndescribe('calculateNumber', () => {\n  describe('type == \"SUM\"', () => {\n    it('should add two positive numbers correctly', () => {\n      expect(calculateNumber('SUM', 2.0, 2.0)).to.equal(4);\n    });\n    it('should add two negative numbers correctly', () => {\n      expect(calculateNumber('SUM', -2.0, -2.0)).to.equal(-4);\n    });\n    it('should add a negative and a positive number correctly', () => {\n      expect(calculateNumber('SUM', -2.0, 2.0)).to.equal(0);\n    });\n    it('should handle adding zero correctly', () => {\n      expect(calculateNumber('SUM', 0.0, 0.0)).to.equal(0);\n    });\n  });\n  describe('type == \"SUBTRACT\"', () => {\n    it('should subtract two positive numbers correctly', () => {\n      expect(calculateNumber('SUBTRACT', 2.0, 2.0)).to.equal(0);\n    });\n    it('should subtract a positive and a negative number correctly', () => {\n      expect(calculateNumber('SUBTRACT', 2.0, -2.0)).to.equal(4);\n    });\n    it('should handle subtracting zero correctly', () => {\n      expect(calculateNumber('SUBTRACT', 0.0, 0.0)).to.equal(0);\n    });\n  });\n  describe('type == \"DIVIDE\"', () => {\n    it('should divide two positive numbers correctly', () => {\n      expect(calculateNumber('DIVIDE', 8.0, 2.0)).to.equal(4);\n    });\n    it('should handle dividing a negative number by a positive number', () => {\n      expect(calculateNumber('DIVIDE', -7.0, 2.0)).to.equal(-3.5);\n    });\n    it('should handle dividing a positive number by a negative number', () => {\n      expect(calculateNumber('DIVIDE', 7.0, -2.0)).to.equal(-3.5);\n    });\n    it('should handle dividing two negative numbers', () => {\n      expect(calculateNumber('DIVIDE', -7.0, -2.0)).to.equal(3.5);\n    });\n    it('should handle dividing equal positive numbers', () => {\n      expect(calculateNumber('DIVIDE', 2.0, 2.0)).to.equal(1);\n    });\n    it('should handle dividing equal negative numbers', () => {\n      expect(calculateNumber('DIVIDE', -2.0, -2.0)).to.equal(1);\n    });\n    it('should round up when dividing numbers that result in a rounded-up quotient', () => {\n      expect(calculateNumber('DIVIDE', 2.6, 3.0)).to.equal(1);\n    });\n    it('should round down when dividing numbers that result in a rounded-down quotient', () => {\n      expect(calculateNumber('DIVIDE', 2.4, 2.0)).to.equal(1);\n    });\n    it('should handle dividing zero by a positive number', () => {\n      expect(calculateNumber('DIVIDE', 0.0, 5.0)).to.equal(0);\n    });\n    it('should handle dividing zero by a negative number', () => {\n      expect(calculateNumber('DIVIDE', 0.0, -5.0)).to.equal(-0);\n    });\n    it('should return \"Error\" when dividing a positive number by zero', () => {\n      expect(calculateNumber('DIVIDE', 5.0, 0)).to.equal('Error');\n    });\n    it('should return \"Error\" when dividing a positive number by a number rounded down to zero', () => {\n      expect(calculateNumber('DIVIDE', 5.0, 0.2)).to.equal('Error');\n    });\n    it('should return \"Error\" when dividing a positive number by a number rounded up to zero', () => {\n      expect(calculateNumber('DIVIDE', 5.0, -0.2)).to.equal('Error');\n    });\n    it('should return \"Error\" when dividing a negative number by zero', () => {\n      expect(calculateNumber('DIVIDE', -5.0, 0)).to.equal('Error');\n    });\n    it('should return \"Error\" when dividing a negative number by a number rounded down to zero', () => {\n      expect(calculateNumber('DIVIDE', -5.0, 0.2)).to.equal('Error');\n    });\n    it('should return \"Error\" when dividing a negative number by a number rounded up to zero', () => {\n      expect(calculateNumber('DIVIDE', -5.0, -0.2)).to.equal('Error');\n    });\n    it('should return \"Error\" when dividing zero by zero', () => {\n      expect(calculateNumber('DIVIDE', 0.0, 0.0)).to.equal('Error');\n    });\n  });\n  describe('Invalid operation type', () => {\n    it('should throw an error for an invalid operation type', () => {\n      expect(() => calculateNumber('MULTIPLY', 2.0, 3.0)).to.throw('Invalid operation type');\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHBlY3QiLCJyZXF1aXJlIiwiY2FsY3VsYXRlTnVtYmVyIiwiZGVzY3JpYmUiLCJpdCIsInRvIiwiZXF1YWwiLCJ0aHJvdyJdLCJzb3VyY2VSb290IjoiL2FseC1iYWNrZW5kLWphdmFzY3JpcHQvMHgwNi11bml0dGVzdHNfaW5fanMvIiwic291cmNlcyI6WyIyLWNhbGN1bF9jaGFpLnRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBleHBlY3QgfSA9IHJlcXVpcmUoJ2NoYWknKTtcbmNvbnN0IGNhbGN1bGF0ZU51bWJlciA9IHJlcXVpcmUoJy4vMi1jYWxjdWxfY2hhaScpO1xuXG5kZXNjcmliZSgnY2FsY3VsYXRlTnVtYmVyJywgKCkgPT4ge1xuICBkZXNjcmliZSgndHlwZSA9PSBcIlNVTVwiJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgYWRkIHR3byBwb3NpdGl2ZSBudW1iZXJzIGNvcnJlY3RseScsICgpID0+IHtcbiAgICAgIGV4cGVjdChjYWxjdWxhdGVOdW1iZXIoJ1NVTScsIDIuMCwgMi4wKSkudG8uZXF1YWwoNCk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIGFkZCB0d28gbmVnYXRpdmUgbnVtYmVycyBjb3JyZWN0bHknLCAoKSA9PiB7XG4gICAgICBleHBlY3QoY2FsY3VsYXRlTnVtYmVyKCdTVU0nLCAtMi4wLCAtMi4wKSkudG8uZXF1YWwoLTQpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCBhZGQgYSBuZWdhdGl2ZSBhbmQgYSBwb3NpdGl2ZSBudW1iZXIgY29ycmVjdGx5JywgKCkgPT4ge1xuICAgICAgZXhwZWN0KGNhbGN1bGF0ZU51bWJlcignU1VNJywgLTIuMCwgMi4wKSkudG8uZXF1YWwoMCk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIGhhbmRsZSBhZGRpbmcgemVybyBjb3JyZWN0bHknLCAoKSA9PiB7XG4gICAgICBleHBlY3QoY2FsY3VsYXRlTnVtYmVyKCdTVU0nLCAwLjAsIDAuMCkpLnRvLmVxdWFsKDApO1xuICAgIH0pO1xuICB9KTtcblxuICBkZXNjcmliZSgndHlwZSA9PSBcIlNVQlRSQUNUXCInLCAoKSA9PiB7XG4gICAgaXQoJ3Nob3VsZCBzdWJ0cmFjdCB0d28gcG9zaXRpdmUgbnVtYmVycyBjb3JyZWN0bHknLCAoKSA9PiB7XG4gICAgICBleHBlY3QoY2FsY3VsYXRlTnVtYmVyKCdTVUJUUkFDVCcsIDIuMCwgMi4wKSkudG8uZXF1YWwoMCk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIHN1YnRyYWN0IGEgcG9zaXRpdmUgYW5kIGEgbmVnYXRpdmUgbnVtYmVyIGNvcnJlY3RseScsICgpID0+IHtcbiAgICAgIGV4cGVjdChjYWxjdWxhdGVOdW1iZXIoJ1NVQlRSQUNUJywgMi4wLCAtMi4wKSkudG8uZXF1YWwoNCk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIGhhbmRsZSBzdWJ0cmFjdGluZyB6ZXJvIGNvcnJlY3RseScsICgpID0+IHtcbiAgICAgIGV4cGVjdChjYWxjdWxhdGVOdW1iZXIoJ1NVQlRSQUNUJywgMC4wLCAwLjApKS50by5lcXVhbCgwKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgZGVzY3JpYmUoJ3R5cGUgPT0gXCJESVZJREVcIicsICgpID0+IHtcbiAgICBpdCgnc2hvdWxkIGRpdmlkZSB0d28gcG9zaXRpdmUgbnVtYmVycyBjb3JyZWN0bHknLCAoKSA9PiB7XG4gICAgICBleHBlY3QoY2FsY3VsYXRlTnVtYmVyKCdESVZJREUnLCA4LjAsIDIuMCkpLnRvLmVxdWFsKDQpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCBoYW5kbGUgZGl2aWRpbmcgYSBuZWdhdGl2ZSBudW1iZXIgYnkgYSBwb3NpdGl2ZSBudW1iZXInLCAoKSA9PiB7XG4gICAgICBleHBlY3QoY2FsY3VsYXRlTnVtYmVyKCdESVZJREUnLCAtNy4wLCAyLjApKS50by5lcXVhbCgtMy41KTtcbiAgICB9KTtcblxuICAgIGl0KCdzaG91bGQgaGFuZGxlIGRpdmlkaW5nIGEgcG9zaXRpdmUgbnVtYmVyIGJ5IGEgbmVnYXRpdmUgbnVtYmVyJywgKCkgPT4ge1xuICAgICAgZXhwZWN0KGNhbGN1bGF0ZU51bWJlcignRElWSURFJywgNy4wLCAtMi4wKSkudG8uZXF1YWwoLTMuNSk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIGhhbmRsZSBkaXZpZGluZyB0d28gbmVnYXRpdmUgbnVtYmVycycsICgpID0+IHtcbiAgICAgIGV4cGVjdChjYWxjdWxhdGVOdW1iZXIoJ0RJVklERScsIC03LjAsIC0yLjApKS50by5lcXVhbCgzLjUpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCBoYW5kbGUgZGl2aWRpbmcgZXF1YWwgcG9zaXRpdmUgbnVtYmVycycsICgpID0+IHtcbiAgICAgIGV4cGVjdChjYWxjdWxhdGVOdW1iZXIoJ0RJVklERScsIDIuMCwgMi4wKSkudG8uZXF1YWwoMSk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIGhhbmRsZSBkaXZpZGluZyBlcXVhbCBuZWdhdGl2ZSBudW1iZXJzJywgKCkgPT4ge1xuICAgICAgZXhwZWN0KGNhbGN1bGF0ZU51bWJlcignRElWSURFJywgLTIuMCwgLTIuMCkpLnRvLmVxdWFsKDEpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCByb3VuZCB1cCB3aGVuIGRpdmlkaW5nIG51bWJlcnMgdGhhdCByZXN1bHQgaW4gYSByb3VuZGVkLXVwIHF1b3RpZW50JywgKCkgPT4ge1xuICAgICAgZXhwZWN0KGNhbGN1bGF0ZU51bWJlcignRElWSURFJywgMi42LCAzLjApKS50by5lcXVhbCgxKTtcbiAgICB9KTtcblxuICAgIGl0KCdzaG91bGQgcm91bmQgZG93biB3aGVuIGRpdmlkaW5nIG51bWJlcnMgdGhhdCByZXN1bHQgaW4gYSByb3VuZGVkLWRvd24gcXVvdGllbnQnLCAoKSA9PiB7XG4gICAgICBleHBlY3QoY2FsY3VsYXRlTnVtYmVyKCdESVZJREUnLCAyLjQsIDIuMCkpLnRvLmVxdWFsKDEpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCBoYW5kbGUgZGl2aWRpbmcgemVybyBieSBhIHBvc2l0aXZlIG51bWJlcicsICgpID0+IHtcbiAgICAgIGV4cGVjdChjYWxjdWxhdGVOdW1iZXIoJ0RJVklERScsIDAuMCwgNS4wKSkudG8uZXF1YWwoMCk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIGhhbmRsZSBkaXZpZGluZyB6ZXJvIGJ5IGEgbmVnYXRpdmUgbnVtYmVyJywgKCkgPT4ge1xuICAgICAgZXhwZWN0KGNhbGN1bGF0ZU51bWJlcignRElWSURFJywgMC4wLCAtNS4wKSkudG8uZXF1YWwoLTApO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCByZXR1cm4gXCJFcnJvclwiIHdoZW4gZGl2aWRpbmcgYSBwb3NpdGl2ZSBudW1iZXIgYnkgemVybycsICgpID0+IHtcbiAgICAgIGV4cGVjdChjYWxjdWxhdGVOdW1iZXIoJ0RJVklERScsIDUuMCwgMCkpLnRvLmVxdWFsKCdFcnJvcicpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCByZXR1cm4gXCJFcnJvclwiIHdoZW4gZGl2aWRpbmcgYSBwb3NpdGl2ZSBudW1iZXIgYnkgYSBudW1iZXIgcm91bmRlZCBkb3duIHRvIHplcm8nLCAoKSA9PiB7XG4gICAgICBleHBlY3QoY2FsY3VsYXRlTnVtYmVyKCdESVZJREUnLCA1LjAsIDAuMikpLnRvLmVxdWFsKCdFcnJvcicpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCByZXR1cm4gXCJFcnJvclwiIHdoZW4gZGl2aWRpbmcgYSBwb3NpdGl2ZSBudW1iZXIgYnkgYSBudW1iZXIgcm91bmRlZCB1cCB0byB6ZXJvJywgKCkgPT4ge1xuICAgICAgZXhwZWN0KGNhbGN1bGF0ZU51bWJlcignRElWSURFJywgNS4wLCAtMC4yKSkudG8uZXF1YWwoJ0Vycm9yJyk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIHJldHVybiBcIkVycm9yXCIgd2hlbiBkaXZpZGluZyBhIG5lZ2F0aXZlIG51bWJlciBieSB6ZXJvJywgKCkgPT4ge1xuICAgICAgZXhwZWN0KGNhbGN1bGF0ZU51bWJlcignRElWSURFJywgLTUuMCwgMCkpLnRvLmVxdWFsKCdFcnJvcicpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCByZXR1cm4gXCJFcnJvclwiIHdoZW4gZGl2aWRpbmcgYSBuZWdhdGl2ZSBudW1iZXIgYnkgYSBudW1iZXIgcm91bmRlZCBkb3duIHRvIHplcm8nLCAoKSA9PiB7XG4gICAgICBleHBlY3QoY2FsY3VsYXRlTnVtYmVyKCdESVZJREUnLCAtNS4wLCAwLjIpKS50by5lcXVhbCgnRXJyb3InKTtcbiAgICB9KTtcblxuICAgIGl0KCdzaG91bGQgcmV0dXJuIFwiRXJyb3JcIiB3aGVuIGRpdmlkaW5nIGEgbmVnYXRpdmUgbnVtYmVyIGJ5IGEgbnVtYmVyIHJvdW5kZWQgdXAgdG8gemVybycsICgpID0+IHtcbiAgICAgIGV4cGVjdChjYWxjdWxhdGVOdW1iZXIoJ0RJVklERScsIC01LjAsIC0wLjIpKS50by5lcXVhbCgnRXJyb3InKTtcbiAgICB9KTtcblxuICAgIGl0KCdzaG91bGQgcmV0dXJuIFwiRXJyb3JcIiB3aGVuIGRpdmlkaW5nIHplcm8gYnkgemVybycsICgpID0+IHtcbiAgICAgIGV4cGVjdChjYWxjdWxhdGVOdW1iZXIoJ0RJVklERScsIDAuMCwgMC4wKSkudG8uZXF1YWwoJ0Vycm9yJyk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCdJbnZhbGlkIG9wZXJhdGlvbiB0eXBlJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgdGhyb3cgYW4gZXJyb3IgZm9yIGFuIGludmFsaWQgb3BlcmF0aW9uIHR5cGUnLCAoKSA9PiB7XG4gICAgICBleHBlY3QoKCkgPT4gY2FsY3VsYXRlTnVtYmVyKCdNVUxUSVBMWScsIDIuMCwgMy4wKSkudG8udGhyb3coJ0ludmFsaWQgb3BlcmF0aW9uIHR5cGUnKTtcbiAgICB9KTtcbiAgfSk7XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtFQUFFQTtBQUFPLENBQUMsR0FBR0MsT0FBTyxDQUFD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","map":{"version":3,"names":["expect","require","calculateNumber","describe","it","to","equal","throw"],"sourceRoot":"/alx-backend-javascript/0x06-unittests_in_js/","sources":["2-calcul_chai.test.js"],"sourcesContent":["const { expect } = require('chai');\nconst calculateNumber = require('./2-calcul_chai');\n\ndescribe('calculateNumber', () => {\n  describe('type == \"SUM\"', () => {\n    it('should add two positive numbers correctly', () => {\n      expect(calculateNumber('SUM', 2.0, 2.0)).to.equal(4);\n    });\n\n    it('should add two negative numbers correctly', () => {\n      expect(calculateNumber('SUM', -2.0, -2.0)).to.equal(-4);\n    });\n\n    it('should add a negative and a positive number correctly', () => {\n      expect(calculateNumber('SUM', -2.0, 2.0)).to.equal(0);\n    });\n\n    it('should handle adding zero correctly', () => {\n      expect(calculateNumber('SUM', 0.0, 0.0)).to.equal(0);\n    });\n  });\n\n  describe('type == \"SUBTRACT\"', () => {\n    it('should subtract two positive numbers correctly', () => {\n      expect(calculateNumber('SUBTRACT', 2.0, 2.0)).to.equal(0);\n    });\n\n    it('should subtract a positive and a negative number correctly', () => {\n      expect(calculateNumber('SUBTRACT', 2.0, -2.0)).to.equal(4);\n    });\n\n    it('should handle subtracting zero correctly', () => {\n      expect(calculateNumber('SUBTRACT', 0.0, 0.0)).to.equal(0);\n    });\n  });\n\n  describe('type == \"DIVIDE\"', () => {\n    it('should divide two positive numbers correctly', () => {\n      expect(calculateNumber('DIVIDE', 8.0, 2.0)).to.equal(4);\n    });\n\n    it('should handle dividing a negative number by a positive number', () => {\n      expect(calculateNumber('DIVIDE', -7.0, 2.0)).to.equal(-3.5);\n    });\n\n    it('should handle dividing a positive number by a negative number', () => {\n      expect(calculateNumber('DIVIDE', 7.0, -2.0)).to.equal(-3.5);\n    });\n\n    it('should handle dividing two negative numbers', () => {\n      expect(calculateNumber('DIVIDE', -7.0, -2.0)).to.equal(3.5);\n    });\n\n    it('should handle dividing equal positive numbers', () => {\n      expect(calculateNumber('DIVIDE', 2.0, 2.0)).to.equal(1);\n    });\n\n    it('should handle dividing equal negative numbers', () => {\n      expect(calculateNumber('DIVIDE', -2.0, -2.0)).to.equal(1);\n    });\n\n    it('should round up when dividing numbers that result in a rounded-up quotient', () => {\n      expect(calculateNumber('DIVIDE', 2.6, 3.0)).to.equal(1);\n    });\n\n    it('should round down when dividing numbers that result in a rounded-down quotient', () => {\n      expect(calculateNumber('DIVIDE', 2.4, 2.0)).to.equal(1);\n    });\n\n    it('should handle dividing zero by a positive number', () => {\n      expect(calculateNumber('DIVIDE', 0.0, 5.0)).to.equal(0);\n    });\n\n    it('should handle dividing zero by a negative number', () => {\n      expect(calculateNumber('DIVIDE', 0.0, -5.0)).to.equal(-0);\n    });\n\n    it('should return \"Error\" when dividing a positive number by zero', () => {\n      expect(calculateNumber('DIVIDE', 5.0, 0)).to.equal('Error');\n    });\n\n    it('should return \"Error\" when dividing a positive number by a number rounded down to zero', () => {\n      expect(calculateNumber('DIVIDE', 5.0, 0.2)).to.equal('Error');\n    });\n\n    it('should return \"Error\" when dividing a positive number by a number rounded up to zero', () => {\n      expect(calculateNumber('DIVIDE', 5.0, -0.2)).to.equal('Error');\n    });\n\n    it('should return \"Error\" when dividing a negative number by zero', () => {\n      expect(calculateNumber('DIVIDE', -5.0, 0)).to.equal('Error');\n    });\n\n    it('should return \"Error\" when dividing a negative number by a number rounded down to zero', () => {\n      expect(calculateNumber('DIVIDE', -5.0, 0.2)).to.equal('Error');\n    });\n\n    it('should return \"Error\" when dividing a negative number by a number rounded up to zero', () => {\n      expect(calculateNumber('DIVIDE', -5.0, -0.2)).to.equal('Error');\n    });\n\n    it('should return \"Error\" when dividing zero by zero', () => {\n      expect(calculateNumber('DIVIDE', 0.0, 0.0)).to.equal('Error');\n    });\n  });\n\n  describe('Invalid operation type', () => {\n    it('should throw an error for an invalid operation type', () => {\n      expect(() => calculateNumber('MULTIPLY', 2.0, 3.0)).to.throw('Invalid operation type');\n    });\n  });\n});\n"],"mappings":"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","ignoreList":[]}},"mtime":1718927658147},"{\"assumptions\":{},\"sourceRoot\":\"/alx-backend-javascript/0x06-unittests_in_js/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"filename\":\"/alx-backend-javascript/0x06-unittests_in_js/2-calcul_chai.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.7:development":{"value":{"code":"/**\n * Function that performs arithmetic operations on two rounded numbers.\n * @param {string} type - The type of operation (SUM, SUBTRACT, or DIVIDE).\n * @param {number} a - The first number.\n * @param {number} b - The second number.\n * @returns {number|string} The result of the operation or 'Error' if division by zero.\n */\nfunction calculateNumber(type, a, b) {\n  const roundedA = Math.round(a);\n  const roundedB = Math.round(b);\n  if (type === 'SUM') {\n    return roundedA + roundedB;\n  } else if (type === 'SUBTRACT') {\n    return roundedA - roundedB;\n  } else if (type === 'DIVIDE') {\n    if (roundedB === 0) {\n      return 'Error';\n    }\n    return roundedA / roundedB;\n  } else {\n    throw new Error('Invalid operation type');\n  }\n}\nmodule.exports = calculateNumber;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjYWxjdWxhdGVOdW1iZXIiLCJ0eXBlIiwiYSIsImIiLCJyb3VuZGVkQSIsIk1hdGgiLCJyb3VuZCIsInJvdW5kZWRCIiwiRXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIvYWx4LWJhY2tlbmQtamF2YXNjcmlwdC8weDA2LXVuaXR0ZXN0c19pbl9qcy8iLCJzb3VyY2VzIjpbIjItY2FsY3VsX2NoYWkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBGdW5jdGlvbiB0aGF0IHBlcmZvcm1zIGFyaXRobWV0aWMgb3BlcmF0aW9ucyBvbiB0d28gcm91bmRlZCBudW1iZXJzLlxuICogQHBhcmFtIHtzdHJpbmd9IHR5cGUgLSBUaGUgdHlwZSBvZiBvcGVyYXRpb24gKFNVTSwgU1VCVFJBQ1QsIG9yIERJVklERSkuXG4gKiBAcGFyYW0ge251bWJlcn0gYSAtIFRoZSBmaXJzdCBudW1iZXIuXG4gKiBAcGFyYW0ge251bWJlcn0gYiAtIFRoZSBzZWNvbmQgbnVtYmVyLlxuICogQHJldHVybnMge251bWJlcnxzdHJpbmd9IFRoZSByZXN1bHQgb2YgdGhlIG9wZXJhdGlvbiBvciAnRXJyb3InIGlmIGRpdmlzaW9uIGJ5IHplcm8uXG4gKi9cbmZ1bmN0aW9uIGNhbGN1bGF0ZU51bWJlcih0eXBlLCBhLCBiKSB7XG4gIGNvbnN0IHJvdW5kZWRBID0gTWF0aC5yb3VuZChhKTtcbiAgY29uc3Qgcm91bmRlZEIgPSBNYXRoLnJvdW5kKGIpO1xuXG4gIGlmICh0eXBlID09PSAnU1VNJykge1xuICAgIHJldHVybiByb3VuZGVkQSArIHJvdW5kZWRCO1xuICB9IGVsc2UgaWYgKHR5cGUgPT09ICdTVUJUUkFDVCcpIHtcbiAgICByZXR1cm4gcm91bmRlZEEgLSByb3VuZGVkQjtcbiAgfSBlbHNlIGlmICh0eXBlID09PSAnRElWSURFJykge1xuICAgIGlmIChyb3VuZGVkQiA9PT0gMCkge1xuICAgICAgcmV0dXJuICdFcnJvcic7XG4gICAgfVxuICAgIHJldHVybiByb3VuZGVkQSAvIHJvdW5kZWRCO1xuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBvcGVyYXRpb24gdHlwZScpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY2FsY3VsYXRlTnVtYmVyO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVNBLGVBQWVBLENBQUNDLElBQUksRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUU7RUFDbkMsTUFBTUMsUUFBUSxHQUFHQyxJQUFJLENBQUNDLEtBQUssQ0FBQ0osQ0FBQyxDQUFDO0VBQzlCLE1BQU1LLFFBQVEsR0FBR0YsSUFBSSxDQUFDQyxLQUFLLENBQUNILENBQUMsQ0FBQztFQUU5QixJQUFJRixJQUFJLEtBQUssS0FBSyxFQUFFO0lBQ2xCLE9BQU9HLFFBQVEsR0FBR0csUUFBUTtFQUM1QixDQUFDLE1BQU0sSUFBSU4sSUFBSSxLQUFLLFVBQVUsRUFBRTtJQUM5QixPQUFPRyxRQUFRLEdBQUdHLFFBQVE7RUFDNUIsQ0FBQyxNQUFNLElBQUlOLElBQUksS0FBSyxRQUFRLEVBQUU7SUFDNUIsSUFBSU0sUUFBUSxLQUFLLENBQUMsRUFBRTtNQUNsQixPQUFPLE9BQU87SUFDaEI7SUFDQSxPQUFPSCxRQUFRLEdBQUdHLFFBQVE7RUFDNUIsQ0FBQyxNQUFNO0lBQ0wsTUFBTSxJQUFJQyxLQUFLLENBQUMsd0JBQXdCLENBQUM7RUFDM0M7QUFDRjtBQUVBQyxNQUFNLENBQUNDLE9BQU8sR0FBR1YsZUFBZSIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["calculateNumber","type","a","b","roundedA","Math","round","roundedB","Error","module","exports"],"sourceRoot":"/alx-backend-javascript/0x06-unittests_in_js/","sources":["2-calcul_chai.js"],"sourcesContent":["/**\n * Function that performs arithmetic operations on two rounded numbers.\n * @param {string} type - The type of operation (SUM, SUBTRACT, or DIVIDE).\n * @param {number} a - The first number.\n * @param {number} b - The second number.\n * @returns {number|string} The result of the operation or 'Error' if division by zero.\n */\nfunction calculateNumber(type, a, b) {\n  const roundedA = Math.round(a);\n  const roundedB = Math.round(b);\n\n  if (type === 'SUM') {\n    return roundedA + roundedB;\n  } else if (type === 'SUBTRACT') {\n    return roundedA - roundedB;\n  } else if (type === 'DIVIDE') {\n    if (roundedB === 0) {\n      return 'Error';\n    }\n    return roundedA / roundedB;\n  } else {\n    throw new Error('Invalid operation type');\n  }\n}\n\nmodule.exports = calculateNumber;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,eAAeA,CAACC,IAAI,EAAEC,CAAC,EAAEC,CAAC,EAAE;EACnC,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACJ,CAAC,CAAC;EAC9B,MAAMK,QAAQ,GAAGF,IAAI,CAACC,KAAK,CAACH,CAAC,CAAC;EAE9B,IAAIF,IAAI,KAAK,KAAK,EAAE;IAClB,OAAOG,QAAQ,GAAGG,QAAQ;EAC5B,CAAC,MAAM,IAAIN,IAAI,KAAK,UAAU,EAAE;IAC9B,OAAOG,QAAQ,GAAGG,QAAQ;EAC5B,CAAC,MAAM,IAAIN,IAAI,KAAK,QAAQ,EAAE;IAC5B,IAAIM,QAAQ,KAAK,CAAC,EAAE;MAClB,OAAO,OAAO;IAChB;IACA,OAAOH,QAAQ,GAAGG,QAAQ;EAC5B,CAAC,MAAM;IACL,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EAC3C;AACF;AAEAC,MAAM,CAACC,OAAO,GAAGV,eAAe","ignoreList":[]}},"mtime":1718927585018},"{\"assumptions\":{},\"sourceRoot\":\"/alx-backend-javascript/0x06-unittests_in_js/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"filename\":\"/alx-backend-javascript/0x06-unittests_in_js/3-payment.test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.7:development":{"value":{"code":"const sinon = require('sinon');\nconst Utils = require('./utils');\nconst {\n  expect\n} = require('chai');\nconst sendPaymentRequestToApi = require('./3-payment'); // Ensure correct file path\n\ndescribe('sendPaymentRequestToApi', () => {\n  it('sendPaymentRequestToApi uses the calculateNumber method of Utils', () => {\n    const bigBrother = sinon.spy(Utils, 'calculateNumber');\n    sendPaymentRequestToApi(100, 20);\n    expect(bigBrother.calledWith('SUM', 100, 20)).to.be.true;\n    expect(bigBrother.callCount).to.be.equal(1);\n    bigBrother.restore();\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzaW5vbiIsInJlcXVpcmUiLCJVdGlscyIsImV4cGVjdCIsInNlbmRQYXltZW50UmVxdWVzdFRvQXBpIiwiZGVzY3JpYmUiLCJpdCIsImJpZ0Jyb3RoZXIiLCJzcHkiLCJjYWxsZWRXaXRoIiwidG8iLCJiZSIsInRydWUiLCJjYWxsQ291bnQiLCJlcXVhbCIsInJlc3RvcmUiXSwic291cmNlUm9vdCI6Ii9hbHgtYmFja2VuZC1qYXZhc2NyaXB0LzB4MDYtdW5pdHRlc3RzX2luX2pzLyIsInNvdXJjZXMiOlsiMy1wYXltZW50LnRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgc2lub24gPSByZXF1aXJlKCdzaW5vbicpO1xuY29uc3QgVXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG5jb25zdCB7IGV4cGVjdCB9ID0gcmVxdWlyZSgnY2hhaScpO1xuY29uc3Qgc2VuZFBheW1lbnRSZXF1ZXN0VG9BcGkgPSByZXF1aXJlKCcuLzMtcGF5bWVudCcpOyAvLyBFbnN1cmUgY29ycmVjdCBmaWxlIHBhdGhcblxuZGVzY3JpYmUoJ3NlbmRQYXltZW50UmVxdWVzdFRvQXBpJywgKCkgPT4ge1xuICBpdCgnc2VuZFBheW1lbnRSZXF1ZXN0VG9BcGkgdXNlcyB0aGUgY2FsY3VsYXRlTnVtYmVyIG1ldGhvZCBvZiBVdGlscycsICgpID0+IHtcbiAgICBjb25zdCBiaWdCcm90aGVyID0gc2lub24uc3B5KFV0aWxzLCAnY2FsY3VsYXRlTnVtYmVyJyk7XG5cbiAgICBzZW5kUGF5bWVudFJlcXVlc3RUb0FwaSgxMDAsIDIwKTtcblxuICAgIGV4cGVjdChiaWdCcm90aGVyLmNhbGxlZFdpdGgoJ1NVTScsIDEwMCwgMjApKS50by5iZS50cnVlO1xuICAgIGV4cGVjdChiaWdCcm90aGVyLmNhbGxDb3VudCkudG8uYmUuZXF1YWwoMSk7XG5cbiAgICBiaWdCcm90aGVyLnJlc3RvcmUoKTtcbiAgfSk7XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBTyxDQUFDO0FBQzlCLE1BQU1DLEtBQUssR0FBR0QsT0FBTyxDQUFDLFNBQVMsQ0FBQztBQUNoQyxNQUFNO0VBQUVFO0FBQU8sQ0FBQyxHQUFHRixPQUFPLENBQUMsTUFBTSxDQUFDO0FBQ2xDLE1BQU1HLHVCQUF1QixHQUFHSCxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQzs7QUFFeERJLFFBQVEsQ0FBQyx5QkFBeUIsRUFBRSxNQUFNO0VBQ3hDQyxFQUFFLENBQUMsa0VBQWtFLEVBQUUsTUFBTTtJQUMzRSxNQUFNQyxVQUFVLEdBQUdQLEtBQUssQ0FBQ1EsR0FBRyxDQUFDTixLQUFLLEVBQUUsaUJBQWlCLENBQUM7SUFFdERFLHVCQUF1QixDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUM7SUFFaENELE1BQU0sQ0FBQ0ksVUFBVSxDQUFDRSxVQUFVLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDQyxFQUFFLENBQUNDLEVBQUUsQ0FBQ0MsSUFBSTtJQUN4RFQsTUFBTSxDQUFDSSxVQUFVLENBQUNNLFNBQVMsQ0FBQyxDQUFDSCxFQUFFLENBQUNDLEVBQUUsQ0FBQ0csS0FBSyxDQUFDLENBQUMsQ0FBQztJQUUzQ1AsVUFBVSxDQUFDUSxPQUFPLENBQUMsQ0FBQztFQUN0QixDQUFDLENBQUM7QUFDSixDQUFDLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=","map":{"version":3,"names":["sinon","require","Utils","expect","sendPaymentRequestToApi","describe","it","bigBrother","spy","calledWith","to","be","true","callCount","equal","restore"],"sourceRoot":"/alx-backend-javascript/0x06-unittests_in_js/","sources":["3-payment.test.js"],"sourcesContent":["const sinon = require('sinon');\nconst Utils = require('./utils');\nconst { expect } = require('chai');\nconst sendPaymentRequestToApi = require('./3-payment'); // Ensure correct file path\n\ndescribe('sendPaymentRequestToApi', () => {\n  it('sendPaymentRequestToApi uses the calculateNumber method of Utils', () => {\n    const bigBrother = sinon.spy(Utils, 'calculateNumber');\n\n    sendPaymentRequestToApi(100, 20);\n\n    expect(bigBrother.calledWith('SUM', 100, 20)).to.be.true;\n    expect(bigBrother.callCount).to.be.equal(1);\n\n    bigBrother.restore();\n  });\n});\n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAMC,KAAK,GAAGD,OAAO,CAAC,SAAS,CAAC;AAChC,MAAM;EAAEE;AAAO,CAAC,GAAGF,OAAO,CAAC,MAAM,CAAC;AAClC,MAAMG,uBAAuB,GAAGH,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;;AAExDI,QAAQ,CAAC,yBAAyB,EAAE,MAAM;EACxCC,EAAE,CAAC,kEAAkE,EAAE,MAAM;IAC3E,MAAMC,UAAU,GAAGP,KAAK,CAACQ,GAAG,CAACN,KAAK,EAAE,iBAAiB,CAAC;IAEtDE,uBAAuB,CAAC,GAAG,EAAE,EAAE,CAAC;IAEhCD,MAAM,CAACI,UAAU,CAACE,UAAU,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,CAACC,EAAE,CAACC,EAAE,CAACC,IAAI;IACxDT,MAAM,CAACI,UAAU,CAACM,SAAS,CAAC,CAACH,EAAE,CAACC,EAAE,CAACG,KAAK,CAAC,CAAC,CAAC;IAE3CP,UAAU,CAACQ,OAAO,CAAC,CAAC;EACtB,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}},"mtime":1718929831018},"{\"assumptions\":{},\"sourceRoot\":\"/alx-backend-javascript/0x06-unittests_in_js/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"filename\":\"/alx-backend-javascript/0x06-unittests_in_js/3-payment.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.7:development":{"value":{"code":"const {\n  calculateNumber\n} = require('./utils');\n\n/**\n * Sends a payment request to an API and logs the total amount.\n * @param {number} totalAmount - Total amount to process.\n * @param {number} totalShipping - Total shipping cost.\n */\nfunction sendPaymentRequestToApi(totalAmount, totalShipping) {\n  const result = Utils.calculateNumber('SUM', totalAmount, totalShipping);\n  console.log(`The total is: ${result}`);\n}\nmodule.exports = sendPaymentRequestToApi;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjYWxjdWxhdGVOdW1iZXIiLCJyZXF1aXJlIiwic2VuZFBheW1lbnRSZXF1ZXN0VG9BcGkiLCJ0b3RhbEFtb3VudCIsInRvdGFsU2hpcHBpbmciLCJyZXN1bHQiLCJVdGlscyIsImNvbnNvbGUiLCJsb2ciLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIvYWx4LWJhY2tlbmQtamF2YXNjcmlwdC8weDA2LXVuaXR0ZXN0c19pbl9qcy8iLCJzb3VyY2VzIjpbIjMtcGF5bWVudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGNhbGN1bGF0ZU51bWJlciB9ID0gcmVxdWlyZSgnLi91dGlscycpO1xuXG4vKipcbiAqIFNlbmRzIGEgcGF5bWVudCByZXF1ZXN0IHRvIGFuIEFQSSBhbmQgbG9ncyB0aGUgdG90YWwgYW1vdW50LlxuICogQHBhcmFtIHtudW1iZXJ9IHRvdGFsQW1vdW50IC0gVG90YWwgYW1vdW50IHRvIHByb2Nlc3MuXG4gKiBAcGFyYW0ge251bWJlcn0gdG90YWxTaGlwcGluZyAtIFRvdGFsIHNoaXBwaW5nIGNvc3QuXG4gKi9cbmZ1bmN0aW9uIHNlbmRQYXltZW50UmVxdWVzdFRvQXBpKHRvdGFsQW1vdW50LCB0b3RhbFNoaXBwaW5nKSB7XG4gIGNvbnN0IHJlc3VsdCA9IFV0aWxzLmNhbGN1bGF0ZU51bWJlcignU1VNJywgdG90YWxBbW91bnQsIHRvdGFsU2hpcHBpbmcpO1xuICBjb25zb2xlLmxvZyhgVGhlIHRvdGFsIGlzOiAke3Jlc3VsdH1gKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzZW5kUGF5bWVudFJlcXVlc3RUb0FwaTtcbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtFQUFFQTtBQUFnQixDQUFDLEdBQUdDLE9BQU8sQ0FBQyxTQUFTLENBQUM7O0FBRTlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTQyx1QkFBdUJBLENBQUNDLFdBQVcsRUFBRUMsYUFBYSxFQUFFO0VBQzNELE1BQU1DLE1BQU0sR0FBR0MsS0FBSyxDQUFDTixlQUFlLENBQUMsS0FBSyxFQUFFRyxXQUFXLEVBQUVDLGFBQWEsQ0FBQztFQUN2RUcsT0FBTyxDQUFDQyxHQUFHLENBQUMsaUJBQWlCSCxNQUFNLEVBQUUsQ0FBQztBQUN4QztBQUVBSSxNQUFNLENBQUNDLE9BQU8sR0FBR1IsdUJBQXVCIiwiaWdub3JlTGlzdCI6W119","map":{"version":3,"names":["calculateNumber","require","sendPaymentRequestToApi","totalAmount","totalShipping","result","Utils","console","log","module","exports"],"sourceRoot":"/alx-backend-javascript/0x06-unittests_in_js/","sources":["3-payment.js"],"sourcesContent":["const { calculateNumber } = require('./utils');\n\n/**\n * Sends a payment request to an API and logs the total amount.\n * @param {number} totalAmount - Total amount to process.\n * @param {number} totalShipping - Total shipping cost.\n */\nfunction sendPaymentRequestToApi(totalAmount, totalShipping) {\n  const result = Utils.calculateNumber('SUM', totalAmount, totalShipping);\n  console.log(`The total is: ${result}`);\n}\n\nmodule.exports = sendPaymentRequestToApi;\n"],"mappings":"AAAA,MAAM;EAAEA;AAAgB,CAAC,GAAGC,OAAO,CAAC,SAAS,CAAC;;AAE9C;AACA;AACA;AACA;AACA;AACA,SAASC,uBAAuBA,CAACC,WAAW,EAAEC,aAAa,EAAE;EAC3D,MAAMC,MAAM,GAAGC,KAAK,CAACN,eAAe,CAAC,KAAK,EAAEG,WAAW,EAAEC,aAAa,CAAC;EACvEG,OAAO,CAACC,GAAG,CAAC,iBAAiBH,MAAM,EAAE,CAAC;AACxC;AAEAI,MAAM,CAACC,OAAO,GAAGR,uBAAuB","ignoreList":[]}},"mtime":1718929749837},"{\"assumptions\":{},\"sourceRoot\":\"/alx-backend-javascript/0x06-unittests_in_js/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"filename\":\"/alx-backend-javascript/0x06-unittests_in_js/utils.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.7:development":{"value":{"code":"/**\n * Performs arithmetic operations based on the type provided.\n * @param {string} type - Type of arithmetic operation ('SUM', 'SUBTRACT', 'DIVIDE').\n * @param {number} a - First operand.\n * @param {number} b - Second operand.\n * @returns {number|string} Result of the arithmetic operation or 'Error' if division by zero.\n * @throws {Error} Throws an error if type is invalid.\n */\nconst calculateNumber = (type, a, b) => {\n  const roundedA = Math.round(a);\n  const roundedB = Math.round(b);\n  if (type === 'SUM') {\n    return roundedA + roundedB;\n  } else if (type === 'SUBTRACT') {\n    return roundedA - roundedB;\n  } else if (type === 'DIVIDE') {\n    if (roundedB === 0) {\n      return 'Error';\n    }\n    return roundedA / roundedB;\n  } else {\n    throw new Error('Invalid operation type');\n  }\n};\nmodule.exports = {\n  calculateNumber\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjYWxjdWxhdGVOdW1iZXIiLCJ0eXBlIiwiYSIsImIiLCJyb3VuZGVkQSIsIk1hdGgiLCJyb3VuZCIsInJvdW5kZWRCIiwiRXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIvYWx4LWJhY2tlbmQtamF2YXNjcmlwdC8weDA2LXVuaXR0ZXN0c19pbl9qcy8iLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUGVyZm9ybXMgYXJpdGhtZXRpYyBvcGVyYXRpb25zIGJhc2VkIG9uIHRoZSB0eXBlIHByb3ZpZGVkLlxuICogQHBhcmFtIHtzdHJpbmd9IHR5cGUgLSBUeXBlIG9mIGFyaXRobWV0aWMgb3BlcmF0aW9uICgnU1VNJywgJ1NVQlRSQUNUJywgJ0RJVklERScpLlxuICogQHBhcmFtIHtudW1iZXJ9IGEgLSBGaXJzdCBvcGVyYW5kLlxuICogQHBhcmFtIHtudW1iZXJ9IGIgLSBTZWNvbmQgb3BlcmFuZC5cbiAqIEByZXR1cm5zIHtudW1iZXJ8c3RyaW5nfSBSZXN1bHQgb2YgdGhlIGFyaXRobWV0aWMgb3BlcmF0aW9uIG9yICdFcnJvcicgaWYgZGl2aXNpb24gYnkgemVyby5cbiAqIEB0aHJvd3Mge0Vycm9yfSBUaHJvd3MgYW4gZXJyb3IgaWYgdHlwZSBpcyBpbnZhbGlkLlxuICovXG5jb25zdCBjYWxjdWxhdGVOdW1iZXIgPSAodHlwZSwgYSwgYikgPT4ge1xuICBjb25zdCByb3VuZGVkQSA9IE1hdGgucm91bmQoYSk7XG4gIGNvbnN0IHJvdW5kZWRCID0gTWF0aC5yb3VuZChiKTtcblxuICBpZiAodHlwZSA9PT0gJ1NVTScpIHtcbiAgICByZXR1cm4gcm91bmRlZEEgKyByb3VuZGVkQjtcbiAgfSBlbHNlIGlmICh0eXBlID09PSAnU1VCVFJBQ1QnKSB7XG4gICAgcmV0dXJuIHJvdW5kZWRBIC0gcm91bmRlZEI7XG4gIH0gZWxzZSBpZiAodHlwZSA9PT0gJ0RJVklERScpIHtcbiAgICBpZiAocm91bmRlZEIgPT09IDApIHtcbiAgICAgIHJldHVybiAnRXJyb3InO1xuICAgIH1cbiAgICByZXR1cm4gcm91bmRlZEEgLyByb3VuZGVkQjtcbiAgfSBlbHNlIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgb3BlcmF0aW9uIHR5cGUnKTtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSB7IGNhbGN1bGF0ZU51bWJlciB9O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTUEsZUFBZSxHQUFHQSxDQUFDQyxJQUFJLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxLQUFLO0VBQ3RDLE1BQU1DLFFBQVEsR0FBR0MsSUFBSSxDQUFDQyxLQUFLLENBQUNKLENBQUMsQ0FBQztFQUM5QixNQUFNSyxRQUFRLEdBQUdGLElBQUksQ0FBQ0MsS0FBSyxDQUFDSCxDQUFDLENBQUM7RUFFOUIsSUFBSUYsSUFBSSxLQUFLLEtBQUssRUFBRTtJQUNsQixPQUFPRyxRQUFRLEdBQUdHLFFBQVE7RUFDNUIsQ0FBQyxNQUFNLElBQUlOLElBQUksS0FBSyxVQUFVLEVBQUU7SUFDOUIsT0FBT0csUUFBUSxHQUFHRyxRQUFRO0VBQzVCLENBQUMsTUFBTSxJQUFJTixJQUFJLEtBQUssUUFBUSxFQUFFO0lBQzVCLElBQUlNLFFBQVEsS0FBSyxDQUFDLEVBQUU7TUFDbEIsT0FBTyxPQUFPO0lBQ2hCO0lBQ0EsT0FBT0gsUUFBUSxHQUFHRyxRQUFRO0VBQzVCLENBQUMsTUFBTTtJQUNMLE1BQU0sSUFBSUMsS0FBSyxDQUFDLHdCQUF3QixDQUFDO0VBQzNDO0FBQ0YsQ0FBQztBQUVEQyxNQUFNLENBQUNDLE9BQU8sR0FBRztFQUFFVjtBQUFnQixDQUFDIiwiaWdub3JlTGlzdCI6W119","map":{"version":3,"names":["calculateNumber","type","a","b","roundedA","Math","round","roundedB","Error","module","exports"],"sourceRoot":"/alx-backend-javascript/0x06-unittests_in_js/","sources":["utils.js"],"sourcesContent":["/**\n * Performs arithmetic operations based on the type provided.\n * @param {string} type - Type of arithmetic operation ('SUM', 'SUBTRACT', 'DIVIDE').\n * @param {number} a - First operand.\n * @param {number} b - Second operand.\n * @returns {number|string} Result of the arithmetic operation or 'Error' if division by zero.\n * @throws {Error} Throws an error if type is invalid.\n */\nconst calculateNumber = (type, a, b) => {\n  const roundedA = Math.round(a);\n  const roundedB = Math.round(b);\n\n  if (type === 'SUM') {\n    return roundedA + roundedB;\n  } else if (type === 'SUBTRACT') {\n    return roundedA - roundedB;\n  } else if (type === 'DIVIDE') {\n    if (roundedB === 0) {\n      return 'Error';\n    }\n    return roundedA / roundedB;\n  } else {\n    throw new Error('Invalid operation type');\n  }\n};\n\nmodule.exports = { calculateNumber };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,eAAe,GAAGA,CAACC,IAAI,EAAEC,CAAC,EAAEC,CAAC,KAAK;EACtC,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACJ,CAAC,CAAC;EAC9B,MAAMK,QAAQ,GAAGF,IAAI,CAACC,KAAK,CAACH,CAAC,CAAC;EAE9B,IAAIF,IAAI,KAAK,KAAK,EAAE;IAClB,OAAOG,QAAQ,GAAGG,QAAQ;EAC5B,CAAC,MAAM,IAAIN,IAAI,KAAK,UAAU,EAAE;IAC9B,OAAOG,QAAQ,GAAGG,QAAQ;EAC5B,CAAC,MAAM,IAAIN,IAAI,KAAK,QAAQ,EAAE;IAC5B,IAAIM,QAAQ,KAAK,CAAC,EAAE;MAClB,OAAO,OAAO;IAChB;IACA,OAAOH,QAAQ,GAAGG,QAAQ;EAC5B,CAAC,MAAM;IACL,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EAC3C;AACF,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAG;EAAEV;AAAgB,CAAC","ignoreList":[]}},"mtime":1718929897654},"{\"assumptions\":{},\"sourceRoot\":\"/alx-backend-javascript/0x06-unittests_in_js/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"filename\":\"/alx-backend-javascript/0x06-unittests_in_js/4-payment.test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.7:development":{"value":{"code":"const sinon = require('sinon');\nconst {\n  expect\n} = require('chai');\nconst sendPaymentRequestToApi = require('./4-payment');\nconst Utils = require('./utils');\ndescribe('sendPaymentRequestToApi', () => {\n  let consoleLogSpy;\n  let calculateNumberStub;\n  beforeEach(() => {\n    // Create a stub for Utils.calculateNumber\n    calculateNumberStub = sinon.stub(Utils, 'calculateNumber').returns(10);\n    // Create a spy for console.log\n    consoleLogSpy = sinon.spy(console, 'log');\n  });\n  afterEach(() => {\n    // Restore stub and spy after each test\n    calculateNumberStub.restore();\n    consoleLogSpy.restore();\n  });\n  it('should call calculateNumber with SUM and correct arguments', () => {\n    sendPaymentRequestToApi(100, 20);\n    // Assert that calculateNumber was called with specific arguments\n    expect(calculateNumberStub.calledOnceWithExactly('SUM', 100, 20)).to.be.true;\n    // Assert that console.log was called with the correct message\n    expect(consoleLogSpy.calledOnceWithExactly('The total is: 10')).to.be.true;\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzaW5vbiIsInJlcXVpcmUiLCJleHBlY3QiLCJzZW5kUGF5bWVudFJlcXVlc3RUb0FwaSIsIlV0aWxzIiwiZGVzY3JpYmUiLCJjb25zb2xlTG9nU3B5IiwiY2FsY3VsYXRlTnVtYmVyU3R1YiIsImJlZm9yZUVhY2giLCJzdHViIiwicmV0dXJucyIsInNweSIsImNvbnNvbGUiLCJhZnRlckVhY2giLCJyZXN0b3JlIiwiaXQiLCJjYWxsZWRPbmNlV2l0aEV4YWN0bHkiLCJ0byIsImJlIiwidHJ1ZSJdLCJzb3VyY2VSb290IjoiL2FseC1iYWNrZW5kLWphdmFzY3JpcHQvMHgwNi11bml0dGVzdHNfaW5fanMvIiwic291cmNlcyI6WyI0LXBheW1lbnQudGVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzaW5vbiA9IHJlcXVpcmUoJ3Npbm9uJyk7XG5jb25zdCB7IGV4cGVjdCB9ID0gcmVxdWlyZSgnY2hhaScpO1xuY29uc3Qgc2VuZFBheW1lbnRSZXF1ZXN0VG9BcGkgPSByZXF1aXJlKCcuLzQtcGF5bWVudCcpO1xuY29uc3QgVXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG5cbmRlc2NyaWJlKCdzZW5kUGF5bWVudFJlcXVlc3RUb0FwaScsICgpID0+IHtcbiAgbGV0IGNvbnNvbGVMb2dTcHk7XG4gIGxldCBjYWxjdWxhdGVOdW1iZXJTdHViO1xuXG4gIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgIC8vIENyZWF0ZSBhIHN0dWIgZm9yIFV0aWxzLmNhbGN1bGF0ZU51bWJlclxuICAgIGNhbGN1bGF0ZU51bWJlclN0dWIgPSBzaW5vbi5zdHViKFV0aWxzLCAnY2FsY3VsYXRlTnVtYmVyJykucmV0dXJucygxMCk7XG4gICAgLy8gQ3JlYXRlIGEgc3B5IGZvciBjb25zb2xlLmxvZ1xuICAgIGNvbnNvbGVMb2dTcHkgPSBzaW5vbi5zcHkoY29uc29sZSwgJ2xvZycpO1xuICB9KTtcblxuICBhZnRlckVhY2goKCkgPT4ge1xuICAgIC8vIFJlc3RvcmUgc3R1YiBhbmQgc3B5IGFmdGVyIGVhY2ggdGVzdFxuICAgIGNhbGN1bGF0ZU51bWJlclN0dWIucmVzdG9yZSgpO1xuICAgIGNvbnNvbGVMb2dTcHkucmVzdG9yZSgpO1xuICB9KTtcblxuICBpdCgnc2hvdWxkIGNhbGwgY2FsY3VsYXRlTnVtYmVyIHdpdGggU1VNIGFuZCBjb3JyZWN0IGFyZ3VtZW50cycsICgpID0+IHtcbiAgICBzZW5kUGF5bWVudFJlcXVlc3RUb0FwaSgxMDAsIDIwKTtcbiAgICAvLyBBc3NlcnQgdGhhdCBjYWxjdWxhdGVOdW1iZXIgd2FzIGNhbGxlZCB3aXRoIHNwZWNpZmljIGFyZ3VtZW50c1xuICAgIGV4cGVjdChjYWxjdWxhdGVOdW1iZXJTdHViLmNhbGxlZE9uY2VXaXRoRXhhY3RseSgnU1VNJywgMTAwLCAyMCkpLnRvLmJlLnRydWU7XG4gICAgLy8gQXNzZXJ0IHRoYXQgY29uc29sZS5sb2cgd2FzIGNhbGxlZCB3aXRoIHRoZSBjb3JyZWN0IG1lc3NhZ2VcbiAgICBleHBlY3QoY29uc29sZUxvZ1NweS5jYWxsZWRPbmNlV2l0aEV4YWN0bHkoJ1RoZSB0b3RhbCBpczogMTAnKSkudG8uYmUudHJ1ZTtcbiAgfSk7XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBTyxDQUFDO0FBQzlCLE1BQU07RUFBRUM7QUFBTyxDQUFDLEdBQUdELE9BQU8sQ0FBQyxNQUFNLENBQUM7QUFDbEMsTUFBTUUsdUJBQXVCLEdBQUdGLE9BQU8sQ0FBQyxhQUFhLENBQUM7QUFDdEQsTUFBTUcsS0FBSyxHQUFHSCxPQUFPLENBQUMsU0FBUyxDQUFDO0FBRWhDSSxRQUFRLENBQUMseUJBQXlCLEVBQUUsTUFBTTtFQUN4QyxJQUFJQyxhQUFhO0VBQ2pCLElBQUlDLG1CQUFtQjtFQUV2QkMsVUFBVSxDQUFDLE1BQU07SUFDZjtJQUNBRCxtQkFBbUIsR0FBR1AsS0FBSyxDQUFDUyxJQUFJLENBQUNMLEtBQUssRUFBRSxpQkFBaUIsQ0FBQyxDQUFDTSxPQUFPLENBQUMsRUFBRSxDQUFDO0lBQ3RFO0lBQ0FKLGFBQWEsR0FBR04sS0FBSyxDQUFDVyxHQUFHLENBQUNDLE9BQU8sRUFBRSxLQUFLLENBQUM7RUFDM0MsQ0FBQyxDQUFDO0VBRUZDLFNBQVMsQ0FBQyxNQUFNO0lBQ2Q7SUFDQU4sbUJBQW1CLENBQUNPLE9BQU8sQ0FBQyxDQUFDO0lBQzdCUixhQUFhLENBQUNRLE9BQU8sQ0FBQyxDQUFDO0VBQ3pCLENBQUMsQ0FBQztFQUVGQyxFQUFFLENBQUMsNERBQTRELEVBQUUsTUFBTTtJQUNyRVosdUJBQXVCLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQztJQUNoQztJQUNBRCxNQUFNLENBQUNLLG1CQUFtQixDQUFDUyxxQkFBcUIsQ0FBQyxLQUFLLEVBQUUsR0FBRyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUNDLEVBQUUsQ0FBQ0MsRUFBRSxDQUFDQyxJQUFJO0lBQzVFO0lBQ0FqQixNQUFNLENBQUNJLGFBQWEsQ0FBQ1UscUJBQXFCLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDQyxFQUFFLENBQUNDLEVBQUUsQ0FBQ0MsSUFBSTtFQUM1RSxDQUFDLENBQUM7QUFDSixDQUFDLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=","map":{"version":3,"names":["sinon","require","expect","sendPaymentRequestToApi","Utils","describe","consoleLogSpy","calculateNumberStub","beforeEach","stub","returns","spy","console","afterEach","restore","it","calledOnceWithExactly","to","be","true"],"sourceRoot":"/alx-backend-javascript/0x06-unittests_in_js/","sources":["4-payment.test.js"],"sourcesContent":["const sinon = require('sinon');\nconst { expect } = require('chai');\nconst sendPaymentRequestToApi = require('./4-payment');\nconst Utils = require('./utils');\n\ndescribe('sendPaymentRequestToApi', () => {\n  let consoleLogSpy;\n  let calculateNumberStub;\n\n  beforeEach(() => {\n    // Create a stub for Utils.calculateNumber\n    calculateNumberStub = sinon.stub(Utils, 'calculateNumber').returns(10);\n    // Create a spy for console.log\n    consoleLogSpy = sinon.spy(console, 'log');\n  });\n\n  afterEach(() => {\n    // Restore stub and spy after each test\n    calculateNumberStub.restore();\n    consoleLogSpy.restore();\n  });\n\n  it('should call calculateNumber with SUM and correct arguments', () => {\n    sendPaymentRequestToApi(100, 20);\n    // Assert that calculateNumber was called with specific arguments\n    expect(calculateNumberStub.calledOnceWithExactly('SUM', 100, 20)).to.be.true;\n    // Assert that console.log was called with the correct message\n    expect(consoleLogSpy.calledOnceWithExactly('The total is: 10')).to.be.true;\n  });\n});\n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAM;EAAEC;AAAO,CAAC,GAAGD,OAAO,CAAC,MAAM,CAAC;AAClC,MAAME,uBAAuB,GAAGF,OAAO,CAAC,aAAa,CAAC;AACtD,MAAMG,KAAK,GAAGH,OAAO,CAAC,SAAS,CAAC;AAEhCI,QAAQ,CAAC,yBAAyB,EAAE,MAAM;EACxC,IAAIC,aAAa;EACjB,IAAIC,mBAAmB;EAEvBC,UAAU,CAAC,MAAM;IACf;IACAD,mBAAmB,GAAGP,KAAK,CAACS,IAAI,CAACL,KAAK,EAAE,iBAAiB,CAAC,CAACM,OAAO,CAAC,EAAE,CAAC;IACtE;IACAJ,aAAa,GAAGN,KAAK,CAACW,GAAG,CAACC,OAAO,EAAE,KAAK,CAAC;EAC3C,CAAC,CAAC;EAEFC,SAAS,CAAC,MAAM;IACd;IACAN,mBAAmB,CAACO,OAAO,CAAC,CAAC;IAC7BR,aAAa,CAACQ,OAAO,CAAC,CAAC;EACzB,CAAC,CAAC;EAEFC,EAAE,CAAC,4DAA4D,EAAE,MAAM;IACrEZ,uBAAuB,CAAC,GAAG,EAAE,EAAE,CAAC;IAChC;IACAD,MAAM,CAACK,mBAAmB,CAACS,qBAAqB,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,CAACC,EAAE,CAACC,EAAE,CAACC,IAAI;IAC5E;IACAjB,MAAM,CAACI,aAAa,CAACU,qBAAqB,CAAC,kBAAkB,CAAC,CAAC,CAACC,EAAE,CAACC,EAAE,CAACC,IAAI;EAC5E,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}},"mtime":1718930261049},"{\"assumptions\":{},\"sourceRoot\":\"/alx-backend-javascript/0x06-unittests_in_js/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"filename\":\"/alx-backend-javascript/0x06-unittests_in_js/4-payment.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.7:development":{"value":{"code":"const Utils = require('./utils');\n\n/**\n * Sends a payment request to an API using Utils.calculateNumber.\n * @param {number} amount - The amount to be paid.\n * @param {number} rate - The rate of payment.\n */\nconst sendPaymentRequestToApi = (amount, rate) => {\n  const total = Utils.calculateNumber('SUM', amount, rate);\n  console.log(`The total is: ${total}`);\n};\nmodule.exports = sendPaymentRequestToApi;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJVdGlscyIsInJlcXVpcmUiLCJzZW5kUGF5bWVudFJlcXVlc3RUb0FwaSIsImFtb3VudCIsInJhdGUiLCJ0b3RhbCIsImNhbGN1bGF0ZU51bWJlciIsImNvbnNvbGUiLCJsb2ciLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIvYWx4LWJhY2tlbmQtamF2YXNjcmlwdC8weDA2LXVuaXR0ZXN0c19pbl9qcy8iLCJzb3VyY2VzIjpbIjQtcGF5bWVudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBVdGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKTtcblxuLyoqXG4gKiBTZW5kcyBhIHBheW1lbnQgcmVxdWVzdCB0byBhbiBBUEkgdXNpbmcgVXRpbHMuY2FsY3VsYXRlTnVtYmVyLlxuICogQHBhcmFtIHtudW1iZXJ9IGFtb3VudCAtIFRoZSBhbW91bnQgdG8gYmUgcGFpZC5cbiAqIEBwYXJhbSB7bnVtYmVyfSByYXRlIC0gVGhlIHJhdGUgb2YgcGF5bWVudC5cbiAqL1xuY29uc3Qgc2VuZFBheW1lbnRSZXF1ZXN0VG9BcGkgPSAoYW1vdW50LCByYXRlKSA9PiB7XG4gIGNvbnN0IHRvdGFsID0gVXRpbHMuY2FsY3VsYXRlTnVtYmVyKCdTVU0nLCBhbW91bnQsIHJhdGUpO1xuICBjb25zb2xlLmxvZyhgVGhlIHRvdGFsIGlzOiAke3RvdGFsfWApO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBzZW5kUGF5bWVudFJlcXVlc3RUb0FwaTtcbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsU0FBUyxDQUFDOztBQUVoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTUMsdUJBQXVCLEdBQUdBLENBQUNDLE1BQU0sRUFBRUMsSUFBSSxLQUFLO0VBQ2hELE1BQU1DLEtBQUssR0FBR0wsS0FBSyxDQUFDTSxlQUFlLENBQUMsS0FBSyxFQUFFSCxNQUFNLEVBQUVDLElBQUksQ0FBQztFQUN4REcsT0FBTyxDQUFDQyxHQUFHLENBQUMsaUJBQWlCSCxLQUFLLEVBQUUsQ0FBQztBQUN2QyxDQUFDO0FBRURJLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHUix1QkFBdUIiLCJpZ25vcmVMaXN0IjpbXX0=","map":{"version":3,"names":["Utils","require","sendPaymentRequestToApi","amount","rate","total","calculateNumber","console","log","module","exports"],"sourceRoot":"/alx-backend-javascript/0x06-unittests_in_js/","sources":["4-payment.js"],"sourcesContent":["const Utils = require('./utils');\n\n/**\n * Sends a payment request to an API using Utils.calculateNumber.\n * @param {number} amount - The amount to be paid.\n * @param {number} rate - The rate of payment.\n */\nconst sendPaymentRequestToApi = (amount, rate) => {\n  const total = Utils.calculateNumber('SUM', amount, rate);\n  console.log(`The total is: ${total}`);\n};\n\nmodule.exports = sendPaymentRequestToApi;\n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,SAAS,CAAC;;AAEhC;AACA;AACA;AACA;AACA;AACA,MAAMC,uBAAuB,GAAGA,CAACC,MAAM,EAAEC,IAAI,KAAK;EAChD,MAAMC,KAAK,GAAGL,KAAK,CAACM,eAAe,CAAC,KAAK,EAAEH,MAAM,EAAEC,IAAI,CAAC;EACxDG,OAAO,CAACC,GAAG,CAAC,iBAAiBH,KAAK,EAAE,CAAC;AACvC,CAAC;AAEDI,MAAM,CAACC,OAAO,GAAGR,uBAAuB","ignoreList":[]}},"mtime":1718930599655},"{\"assumptions\":{},\"sourceRoot\":\"/alx-backend-javascript/0x06-unittests_in_js/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"filename\":\"/alx-backend-javascript/0x06-unittests_in_js/5-payment.test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.7:development":{"value":{"code":"const sinon = require('sinon');\nconst {\n  expect\n} = require('chai');\nconst sendPaymentRequestToApi = require('./5-payment');\ndescribe('sendPaymentRequestToApi', () => {\n  let consoleLogSpy;\n  beforeEach(() => {\n    consoleLogSpy = sinon.spy(console, 'log');\n  });\n  afterEach(() => {\n    consoleLogSpy.restore();\n  });\n  it('should log \"The total is: 120\" and only log once for inputs 100 and 20', () => {\n    sendPaymentRequestToApi(100, 20);\n    expect(consoleLogSpy.calledOnce).to.be.true;\n    expect(consoleLogSpy.calledWithExactly('The total is: 120')).to.be.true;\n  });\n  it('should log \"The total is: 20\" and only log once for inputs 10 and 10', () => {\n    sendPaymentRequestToApi(10, 10);\n    expect(consoleLogSpy.calledOnce).to.be.true;\n    expect(consoleLogSpy.calledWithExactly('The total is: 20')).to.be.true;\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzaW5vbiIsInJlcXVpcmUiLCJleHBlY3QiLCJzZW5kUGF5bWVudFJlcXVlc3RUb0FwaSIsImRlc2NyaWJlIiwiY29uc29sZUxvZ1NweSIsImJlZm9yZUVhY2giLCJzcHkiLCJjb25zb2xlIiwiYWZ0ZXJFYWNoIiwicmVzdG9yZSIsIml0IiwiY2FsbGVkT25jZSIsInRvIiwiYmUiLCJ0cnVlIiwiY2FsbGVkV2l0aEV4YWN0bHkiXSwic291cmNlUm9vdCI6Ii9hbHgtYmFja2VuZC1qYXZhc2NyaXB0LzB4MDYtdW5pdHRlc3RzX2luX2pzLyIsInNvdXJjZXMiOlsiNS1wYXltZW50LnRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgc2lub24gPSByZXF1aXJlKCdzaW5vbicpO1xuY29uc3QgeyBleHBlY3QgfSA9IHJlcXVpcmUoJ2NoYWknKTtcbmNvbnN0IHNlbmRQYXltZW50UmVxdWVzdFRvQXBpID0gcmVxdWlyZSgnLi81LXBheW1lbnQnKTtcblxuZGVzY3JpYmUoJ3NlbmRQYXltZW50UmVxdWVzdFRvQXBpJywgKCkgPT4ge1xuICBsZXQgY29uc29sZUxvZ1NweTtcblxuICBiZWZvcmVFYWNoKCgpID0+IHtcbiAgICBjb25zb2xlTG9nU3B5ID0gc2lub24uc3B5KGNvbnNvbGUsICdsb2cnKTtcbiAgfSk7XG5cbiAgYWZ0ZXJFYWNoKCgpID0+IHtcbiAgICBjb25zb2xlTG9nU3B5LnJlc3RvcmUoKTtcbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCBsb2cgXCJUaGUgdG90YWwgaXM6IDEyMFwiIGFuZCBvbmx5IGxvZyBvbmNlIGZvciBpbnB1dHMgMTAwIGFuZCAyMCcsICgpID0+IHtcbiAgICBzZW5kUGF5bWVudFJlcXVlc3RUb0FwaSgxMDAsIDIwKTtcbiAgICBleHBlY3QoY29uc29sZUxvZ1NweS5jYWxsZWRPbmNlKS50by5iZS50cnVlO1xuICAgIGV4cGVjdChjb25zb2xlTG9nU3B5LmNhbGxlZFdpdGhFeGFjdGx5KCdUaGUgdG90YWwgaXM6IDEyMCcpKS50by5iZS50cnVlO1xuICB9KTtcblxuICBpdCgnc2hvdWxkIGxvZyBcIlRoZSB0b3RhbCBpczogMjBcIiBhbmQgb25seSBsb2cgb25jZSBmb3IgaW5wdXRzIDEwIGFuZCAxMCcsICgpID0+IHtcbiAgICBzZW5kUGF5bWVudFJlcXVlc3RUb0FwaSgxMCwgMTApO1xuICAgIGV4cGVjdChjb25zb2xlTG9nU3B5LmNhbGxlZE9uY2UpLnRvLmJlLnRydWU7XG4gICAgZXhwZWN0KGNvbnNvbGVMb2dTcHkuY2FsbGVkV2l0aEV4YWN0bHkoJ1RoZSB0b3RhbCBpczogMjAnKSkudG8uYmUudHJ1ZTtcbiAgfSk7XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBTyxDQUFDO0FBQzlCLE1BQU07RUFBRUM7QUFBTyxDQUFDLEdBQUdELE9BQU8sQ0FBQyxNQUFNLENBQUM7QUFDbEMsTUFBTUUsdUJBQXVCLEdBQUdGLE9BQU8sQ0FBQyxhQUFhLENBQUM7QUFFdERHLFFBQVEsQ0FBQyx5QkFBeUIsRUFBRSxNQUFNO0VBQ3hDLElBQUlDLGFBQWE7RUFFakJDLFVBQVUsQ0FBQyxNQUFNO0lBQ2ZELGFBQWEsR0FBR0wsS0FBSyxDQUFDTyxHQUFHLENBQUNDLE9BQU8sRUFBRSxLQUFLLENBQUM7RUFDM0MsQ0FBQyxDQUFDO0VBRUZDLFNBQVMsQ0FBQyxNQUFNO0lBQ2RKLGFBQWEsQ0FBQ0ssT0FBTyxDQUFDLENBQUM7RUFDekIsQ0FBQyxDQUFDO0VBRUZDLEVBQUUsQ0FBQyx3RUFBd0UsRUFBRSxNQUFNO0lBQ2pGUix1QkFBdUIsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDO0lBQ2hDRCxNQUFNLENBQUNHLGFBQWEsQ0FBQ08sVUFBVSxDQUFDLENBQUNDLEVBQUUsQ0FBQ0MsRUFBRSxDQUFDQyxJQUFJO0lBQzNDYixNQUFNLENBQUNHLGFBQWEsQ0FBQ1csaUJBQWlCLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxDQUFDSCxFQUFFLENBQUNDLEVBQUUsQ0FBQ0MsSUFBSTtFQUN6RSxDQUFDLENBQUM7RUFFRkosRUFBRSxDQUFDLHNFQUFzRSxFQUFFLE1BQU07SUFDL0VSLHVCQUF1QixDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUM7SUFDL0JELE1BQU0sQ0FBQ0csYUFBYSxDQUFDTyxVQUFVLENBQUMsQ0FBQ0MsRUFBRSxDQUFDQyxFQUFFLENBQUNDLElBQUk7SUFDM0NiLE1BQU0sQ0FBQ0csYUFBYSxDQUFDVyxpQkFBaUIsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUNILEVBQUUsQ0FBQ0MsRUFBRSxDQUFDQyxJQUFJO0VBQ3hFLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["sinon","require","expect","sendPaymentRequestToApi","describe","consoleLogSpy","beforeEach","spy","console","afterEach","restore","it","calledOnce","to","be","true","calledWithExactly"],"sourceRoot":"/alx-backend-javascript/0x06-unittests_in_js/","sources":["5-payment.test.js"],"sourcesContent":["const sinon = require('sinon');\nconst { expect } = require('chai');\nconst sendPaymentRequestToApi = require('./5-payment');\n\ndescribe('sendPaymentRequestToApi', () => {\n  let consoleLogSpy;\n\n  beforeEach(() => {\n    consoleLogSpy = sinon.spy(console, 'log');\n  });\n\n  afterEach(() => {\n    consoleLogSpy.restore();\n  });\n\n  it('should log \"The total is: 120\" and only log once for inputs 100 and 20', () => {\n    sendPaymentRequestToApi(100, 20);\n    expect(consoleLogSpy.calledOnce).to.be.true;\n    expect(consoleLogSpy.calledWithExactly('The total is: 120')).to.be.true;\n  });\n\n  it('should log \"The total is: 20\" and only log once for inputs 10 and 10', () => {\n    sendPaymentRequestToApi(10, 10);\n    expect(consoleLogSpy.calledOnce).to.be.true;\n    expect(consoleLogSpy.calledWithExactly('The total is: 20')).to.be.true;\n  });\n});\n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAM;EAAEC;AAAO,CAAC,GAAGD,OAAO,CAAC,MAAM,CAAC;AAClC,MAAME,uBAAuB,GAAGF,OAAO,CAAC,aAAa,CAAC;AAEtDG,QAAQ,CAAC,yBAAyB,EAAE,MAAM;EACxC,IAAIC,aAAa;EAEjBC,UAAU,CAAC,MAAM;IACfD,aAAa,GAAGL,KAAK,CAACO,GAAG,CAACC,OAAO,EAAE,KAAK,CAAC;EAC3C,CAAC,CAAC;EAEFC,SAAS,CAAC,MAAM;IACdJ,aAAa,CAACK,OAAO,CAAC,CAAC;EACzB,CAAC,CAAC;EAEFC,EAAE,CAAC,wEAAwE,EAAE,MAAM;IACjFR,uBAAuB,CAAC,GAAG,EAAE,EAAE,CAAC;IAChCD,MAAM,CAACG,aAAa,CAACO,UAAU,CAAC,CAACC,EAAE,CAACC,EAAE,CAACC,IAAI;IAC3Cb,MAAM,CAACG,aAAa,CAACW,iBAAiB,CAAC,mBAAmB,CAAC,CAAC,CAACH,EAAE,CAACC,EAAE,CAACC,IAAI;EACzE,CAAC,CAAC;EAEFJ,EAAE,CAAC,sEAAsE,EAAE,MAAM;IAC/ER,uBAAuB,CAAC,EAAE,EAAE,EAAE,CAAC;IAC/BD,MAAM,CAACG,aAAa,CAACO,UAAU,CAAC,CAACC,EAAE,CAACC,EAAE,CAACC,IAAI;IAC3Cb,MAAM,CAACG,aAAa,CAACW,iBAAiB,CAAC,kBAAkB,CAAC,CAAC,CAACH,EAAE,CAACC,EAAE,CAACC,IAAI;EACxE,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}},"mtime":1718930634399},"{\"assumptions\":{},\"sourceRoot\":\"/alx-backend-javascript/0x06-unittests_in_js/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"filename\":\"/alx-backend-javascript/0x06-unittests_in_js/5-payment.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.7:development":{"value":{"code":"const Utils = require('./utils');\n\n/**\n * Sends a payment request to an API using Utils.calculateNumber.\n * @param {number} amount - The amount to be paid.\n * @param {number} rate - The rate of payment.\n */\nconst sendPaymentRequestToApi = (amount, rate) => {\n  const total = Utils.calculateNumber('SUM', amount, rate);\n  console.log(`The total is: ${total}`);\n};\nmodule.exports = sendPaymentRequestToApi;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJVdGlscyIsInJlcXVpcmUiLCJzZW5kUGF5bWVudFJlcXVlc3RUb0FwaSIsImFtb3VudCIsInJhdGUiLCJ0b3RhbCIsImNhbGN1bGF0ZU51bWJlciIsImNvbnNvbGUiLCJsb2ciLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIvYWx4LWJhY2tlbmQtamF2YXNjcmlwdC8weDA2LXVuaXR0ZXN0c19pbl9qcy8iLCJzb3VyY2VzIjpbIjUtcGF5bWVudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBVdGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKTtcblxuLyoqXG4gKiBTZW5kcyBhIHBheW1lbnQgcmVxdWVzdCB0byBhbiBBUEkgdXNpbmcgVXRpbHMuY2FsY3VsYXRlTnVtYmVyLlxuICogQHBhcmFtIHtudW1iZXJ9IGFtb3VudCAtIFRoZSBhbW91bnQgdG8gYmUgcGFpZC5cbiAqIEBwYXJhbSB7bnVtYmVyfSByYXRlIC0gVGhlIHJhdGUgb2YgcGF5bWVudC5cbiAqL1xuY29uc3Qgc2VuZFBheW1lbnRSZXF1ZXN0VG9BcGkgPSAoYW1vdW50LCByYXRlKSA9PiB7XG4gIGNvbnN0IHRvdGFsID0gVXRpbHMuY2FsY3VsYXRlTnVtYmVyKCdTVU0nLCBhbW91bnQsIHJhdGUpO1xuICBjb25zb2xlLmxvZyhgVGhlIHRvdGFsIGlzOiAke3RvdGFsfWApO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBzZW5kUGF5bWVudFJlcXVlc3RUb0FwaTtcbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsU0FBUyxDQUFDOztBQUVoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTUMsdUJBQXVCLEdBQUdBLENBQUNDLE1BQU0sRUFBRUMsSUFBSSxLQUFLO0VBQ2hELE1BQU1DLEtBQUssR0FBR0wsS0FBSyxDQUFDTSxlQUFlLENBQUMsS0FBSyxFQUFFSCxNQUFNLEVBQUVDLElBQUksQ0FBQztFQUN4REcsT0FBTyxDQUFDQyxHQUFHLENBQUMsaUJBQWlCSCxLQUFLLEVBQUUsQ0FBQztBQUN2QyxDQUFDO0FBRURJLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHUix1QkFBdUIiLCJpZ25vcmVMaXN0IjpbXX0=","map":{"version":3,"names":["Utils","require","sendPaymentRequestToApi","amount","rate","total","calculateNumber","console","log","module","exports"],"sourceRoot":"/alx-backend-javascript/0x06-unittests_in_js/","sources":["5-payment.js"],"sourcesContent":["const Utils = require('./utils');\n\n/**\n * Sends a payment request to an API using Utils.calculateNumber.\n * @param {number} amount - The amount to be paid.\n * @param {number} rate - The rate of payment.\n */\nconst sendPaymentRequestToApi = (amount, rate) => {\n  const total = Utils.calculateNumber('SUM', amount, rate);\n  console.log(`The total is: ${total}`);\n};\n\nmodule.exports = sendPaymentRequestToApi;\n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,SAAS,CAAC;;AAEhC;AACA;AACA;AACA;AACA;AACA,MAAMC,uBAAuB,GAAGA,CAACC,MAAM,EAAEC,IAAI,KAAK;EAChD,MAAMC,KAAK,GAAGL,KAAK,CAACM,eAAe,CAAC,KAAK,EAAEH,MAAM,EAAEC,IAAI,CAAC;EACxDG,OAAO,CAACC,GAAG,CAAC,iBAAiBH,KAAK,EAAE,CAAC;AACvC,CAAC;AAEDI,MAAM,CAACC,OAAO,GAAGR,uBAAuB","ignoreList":[]}},"mtime":1718930595551},"{\"assumptions\":{},\"sourceRoot\":\"/alx-backend-javascript/0x06-unittests_in_js/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"filename\":\"/alx-backend-javascript/0x06-unittests_in_js/6-payment_token.test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.7:development":{"value":{"code":"const {\n  expect\n} = require('chai');\nconst {\n  getPaymentTokenFromAPI\n} = require('./6-payment_token');\ndescribe('getPaymentTokenFromAPI', () => {\n  it('should resolve with the correct object when success is true', done => {\n    getPaymentTokenFromAPI(true).then(result => {\n      expect(result).to.deep.equal({\n        data: 'Successful response from the API'\n      });\n      done(); // Call done to indicate the async test is complete\n    }).catch(error => {\n      done(error); // Call done with error if there's an issue\n    });\n  });\n  it('should resolve with undefined when success is false', done => {\n    getPaymentTokenFromAPI(false).then(result => {\n      expect(result).to.be.undefined;\n      done(); // Call done to indicate the async test is complete\n    }).catch(error => {\n      done(error); // Call done with error if there's an issue\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHBlY3QiLCJyZXF1aXJlIiwiZ2V0UGF5bWVudFRva2VuRnJvbUFQSSIsImRlc2NyaWJlIiwiaXQiLCJkb25lIiwidGhlbiIsInJlc3VsdCIsInRvIiwiZGVlcCIsImVxdWFsIiwiZGF0YSIsImNhdGNoIiwiZXJyb3IiLCJiZSIsInVuZGVmaW5lZCJdLCJzb3VyY2VSb290IjoiL2FseC1iYWNrZW5kLWphdmFzY3JpcHQvMHgwNi11bml0dGVzdHNfaW5fanMvIiwic291cmNlcyI6WyI2LXBheW1lbnRfdG9rZW4udGVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGV4cGVjdCB9ID0gcmVxdWlyZSgnY2hhaScpO1xuY29uc3QgeyBnZXRQYXltZW50VG9rZW5Gcm9tQVBJIH0gPSByZXF1aXJlKCcuLzYtcGF5bWVudF90b2tlbicpO1xuXG5kZXNjcmliZSgnZ2V0UGF5bWVudFRva2VuRnJvbUFQSScsICgpID0+IHtcbiAgaXQoJ3Nob3VsZCByZXNvbHZlIHdpdGggdGhlIGNvcnJlY3Qgb2JqZWN0IHdoZW4gc3VjY2VzcyBpcyB0cnVlJywgKGRvbmUpID0+IHtcbiAgICBnZXRQYXltZW50VG9rZW5Gcm9tQVBJKHRydWUpXG4gICAgICAudGhlbigocmVzdWx0KSA9PiB7XG4gICAgICAgIGV4cGVjdChyZXN1bHQpLnRvLmRlZXAuZXF1YWwoeyBkYXRhOiAnU3VjY2Vzc2Z1bCByZXNwb25zZSBmcm9tIHRoZSBBUEknIH0pO1xuICAgICAgICBkb25lKCk7IC8vIENhbGwgZG9uZSB0byBpbmRpY2F0ZSB0aGUgYXN5bmMgdGVzdCBpcyBjb21wbGV0ZVxuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgICAgZG9uZShlcnJvcik7IC8vIENhbGwgZG9uZSB3aXRoIGVycm9yIGlmIHRoZXJlJ3MgYW4gaXNzdWVcbiAgICAgIH0pO1xuICB9KTtcblxuICBpdCgnc2hvdWxkIHJlc29sdmUgd2l0aCB1bmRlZmluZWQgd2hlbiBzdWNjZXNzIGlzIGZhbHNlJywgKGRvbmUpID0+IHtcbiAgICBnZXRQYXltZW50VG9rZW5Gcm9tQVBJKGZhbHNlKVxuICAgICAgLnRoZW4oKHJlc3VsdCkgPT4ge1xuICAgICAgICBleHBlY3QocmVzdWx0KS50by5iZS51bmRlZmluZWQ7XG4gICAgICAgIGRvbmUoKTsgLy8gQ2FsbCBkb25lIHRvIGluZGljYXRlIHRoZSBhc3luYyB0ZXN0IGlzIGNvbXBsZXRlXG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgICBkb25lKGVycm9yKTsgLy8gQ2FsbCBkb25lIHdpdGggZXJyb3IgaWYgdGhlcmUncyBhbiBpc3N1ZVxuICAgICAgfSk7XG4gIH0pO1xufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07RUFBRUE7QUFBTyxDQUFDLEdBQUdDLE9BQU8sQ0FBQyxNQUFNLENBQUM7QUFDbEMsTUFBTTtFQUFFQztBQUF1QixDQUFDLEdBQUdELE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQztBQUUvREUsUUFBUSxDQUFDLHdCQUF3QixFQUFFLE1BQU07RUFDdkNDLEVBQUUsQ0FBQyw2REFBNkQsRUFBR0MsSUFBSSxJQUFLO0lBQzFFSCxzQkFBc0IsQ0FBQyxJQUFJLENBQUMsQ0FDekJJLElBQUksQ0FBRUMsTUFBTSxJQUFLO01BQ2hCUCxNQUFNLENBQUNPLE1BQU0sQ0FBQyxDQUFDQyxFQUFFLENBQUNDLElBQUksQ0FBQ0MsS0FBSyxDQUFDO1FBQUVDLElBQUksRUFBRTtNQUFtQyxDQUFDLENBQUM7TUFDMUVOLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNWLENBQUMsQ0FBQyxDQUNETyxLQUFLLENBQUVDLEtBQUssSUFBSztNQUNoQlIsSUFBSSxDQUFDUSxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQ2YsQ0FBQyxDQUFDO0VBQ04sQ0FBQyxDQUFDO0VBRUZULEVBQUUsQ0FBQyxxREFBcUQsRUFBR0MsSUFBSSxJQUFLO0lBQ2xFSCxzQkFBc0IsQ0FBQyxLQUFLLENBQUMsQ0FDMUJJLElBQUksQ0FBRUMsTUFBTSxJQUFLO01BQ2hCUCxNQUFNLENBQUNPLE1BQU0sQ0FBQyxDQUFDQyxFQUFFLENBQUNNLEVBQUUsQ0FBQ0MsU0FBUztNQUM5QlYsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ1YsQ0FBQyxDQUFDLENBQ0RPLEtBQUssQ0FBRUMsS0FBSyxJQUFLO01BQ2hCUixJQUFJLENBQUNRLEtBQUssQ0FBQyxDQUFDLENBQUM7SUFDZixDQUFDLENBQUM7RUFDTixDQUFDLENBQUM7QUFDSixDQUFDLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=","map":{"version":3,"names":["expect","require","getPaymentTokenFromAPI","describe","it","done","then","result","to","deep","equal","data","catch","error","be","undefined"],"sourceRoot":"/alx-backend-javascript/0x06-unittests_in_js/","sources":["6-payment_token.test.js"],"sourcesContent":["const { expect } = require('chai');\nconst { getPaymentTokenFromAPI } = require('./6-payment_token');\n\ndescribe('getPaymentTokenFromAPI', () => {\n  it('should resolve with the correct object when success is true', (done) => {\n    getPaymentTokenFromAPI(true)\n      .then((result) => {\n        expect(result).to.deep.equal({ data: 'Successful response from the API' });\n        done(); // Call done to indicate the async test is complete\n      })\n      .catch((error) => {\n        done(error); // Call done with error if there's an issue\n      });\n  });\n\n  it('should resolve with undefined when success is false', (done) => {\n    getPaymentTokenFromAPI(false)\n      .then((result) => {\n        expect(result).to.be.undefined;\n        done(); // Call done to indicate the async test is complete\n      })\n      .catch((error) => {\n        done(error); // Call done with error if there's an issue\n      });\n  });\n});\n"],"mappings":"AAAA,MAAM;EAAEA;AAAO,CAAC,GAAGC,OAAO,CAAC,MAAM,CAAC;AAClC,MAAM;EAAEC;AAAuB,CAAC,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AAE/DE,QAAQ,CAAC,wBAAwB,EAAE,MAAM;EACvCC,EAAE,CAAC,6DAA6D,EAAGC,IAAI,IAAK;IAC1EH,sBAAsB,CAAC,IAAI,CAAC,CACzBI,IAAI,CAAEC,MAAM,IAAK;MAChBP,MAAM,CAACO,MAAM,CAAC,CAACC,EAAE,CAACC,IAAI,CAACC,KAAK,CAAC;QAAEC,IAAI,EAAE;MAAmC,CAAC,CAAC;MAC1EN,IAAI,CAAC,CAAC,CAAC,CAAC;IACV,CAAC,CAAC,CACDO,KAAK,CAAEC,KAAK,IAAK;MAChBR,IAAI,CAACQ,KAAK,CAAC,CAAC,CAAC;IACf,CAAC,CAAC;EACN,CAAC,CAAC;EAEFT,EAAE,CAAC,qDAAqD,EAAGC,IAAI,IAAK;IAClEH,sBAAsB,CAAC,KAAK,CAAC,CAC1BI,IAAI,CAAEC,MAAM,IAAK;MAChBP,MAAM,CAACO,MAAM,CAAC,CAACC,EAAE,CAACM,EAAE,CAACC,SAAS;MAC9BV,IAAI,CAAC,CAAC,CAAC,CAAC;IACV,CAAC,CAAC,CACDO,KAAK,CAAEC,KAAK,IAAK;MAChBR,IAAI,CAACQ,KAAK,CAAC,CAAC,CAAC;IACf,CAAC,CAAC;EACN,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}},"mtime":1718930775616},"{\"assumptions\":{},\"sourceRoot\":\"/alx-backend-javascript/0x06-unittests_in_js/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"filename\":\"/alx-backend-javascript/0x06-unittests_in_js/6-payment_token.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.7:development":{"value":{"code":"/**\n * Simulates fetching a payment token from an API.\n * @param {boolean} success - Indicates whether the API call should succeed.\n * @returns {Promise<object>} A Promise that resolves to an object if success is true, otherwise resolves to undefined.\n */\nconst getPaymentTokenFromAPI = success => {\n  return new Promise((resolve, reject) => {\n    if (success) {\n      resolve({\n        data: 'Successful response from the API'\n      });\n    } else {\n      resolve(); // Resolving with undefined if success is false\n    }\n  });\n};\nmodule.exports = {\n  getPaymentTokenFromAPI\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnZXRQYXltZW50VG9rZW5Gcm9tQVBJIiwic3VjY2VzcyIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiZGF0YSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6Ii9hbHgtYmFja2VuZC1qYXZhc2NyaXB0LzB4MDYtdW5pdHRlc3RzX2luX2pzLyIsInNvdXJjZXMiOlsiNi1wYXltZW50X3Rva2VuLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogU2ltdWxhdGVzIGZldGNoaW5nIGEgcGF5bWVudCB0b2tlbiBmcm9tIGFuIEFQSS5cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gc3VjY2VzcyAtIEluZGljYXRlcyB3aGV0aGVyIHRoZSBBUEkgY2FsbCBzaG91bGQgc3VjY2VlZC5cbiAqIEByZXR1cm5zIHtQcm9taXNlPG9iamVjdD59IEEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIHRvIGFuIG9iamVjdCBpZiBzdWNjZXNzIGlzIHRydWUsIG90aGVyd2lzZSByZXNvbHZlcyB0byB1bmRlZmluZWQuXG4gKi9cbmNvbnN0IGdldFBheW1lbnRUb2tlbkZyb21BUEkgPSAoc3VjY2VzcykgPT4ge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGlmIChzdWNjZXNzKSB7XG4gICAgICByZXNvbHZlKHsgZGF0YTogJ1N1Y2Nlc3NmdWwgcmVzcG9uc2UgZnJvbSB0aGUgQVBJJyB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzb2x2ZSgpOyAvLyBSZXNvbHZpbmcgd2l0aCB1bmRlZmluZWQgaWYgc3VjY2VzcyBpcyBmYWxzZVxuICAgIH1cbiAgfSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHsgZ2V0UGF5bWVudFRva2VuRnJvbUFQSSB9O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTUEsc0JBQXNCLEdBQUlDLE9BQU8sSUFBSztFQUMxQyxPQUFPLElBQUlDLE9BQU8sQ0FBQyxDQUFDQyxPQUFPLEVBQUVDLE1BQU0sS0FBSztJQUN0QyxJQUFJSCxPQUFPLEVBQUU7TUFDWEUsT0FBTyxDQUFDO1FBQUVFLElBQUksRUFBRTtNQUFtQyxDQUFDLENBQUM7SUFDdkQsQ0FBQyxNQUFNO01BQ0xGLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNiO0VBQ0YsQ0FBQyxDQUFDO0FBQ0osQ0FBQztBQUVERyxNQUFNLENBQUNDLE9BQU8sR0FBRztFQUFFUDtBQUF1QixDQUFDIiwiaWdub3JlTGlzdCI6W119","map":{"version":3,"names":["getPaymentTokenFromAPI","success","Promise","resolve","reject","data","module","exports"],"sourceRoot":"/alx-backend-javascript/0x06-unittests_in_js/","sources":["6-payment_token.js"],"sourcesContent":["/**\n * Simulates fetching a payment token from an API.\n * @param {boolean} success - Indicates whether the API call should succeed.\n * @returns {Promise<object>} A Promise that resolves to an object if success is true, otherwise resolves to undefined.\n */\nconst getPaymentTokenFromAPI = (success) => {\n  return new Promise((resolve, reject) => {\n    if (success) {\n      resolve({ data: 'Successful response from the API' });\n    } else {\n      resolve(); // Resolving with undefined if success is false\n    }\n  });\n};\n\nmodule.exports = { getPaymentTokenFromAPI };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,MAAMA,sBAAsB,GAAIC,OAAO,IAAK;EAC1C,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC,IAAIH,OAAO,EAAE;MACXE,OAAO,CAAC;QAAEE,IAAI,EAAE;MAAmC,CAAC,CAAC;IACvD,CAAC,MAAM;MACLF,OAAO,CAAC,CAAC,CAAC,CAAC;IACb;EACF,CAAC,CAAC;AACJ,CAAC;AAEDG,MAAM,CAACC,OAAO,GAAG;EAAEP;AAAuB,CAAC","ignoreList":[]}},"mtime":1718930742591},"{\"assumptions\":{},\"sourceRoot\":\"/alx-backend-javascript/0x06-unittests_in_js/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"filename\":\"/alx-backend-javascript/0x06-unittests_in_js/7-skip.test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.7:development":{"value":{"code":"const {\n  expect\n} = require('chai');\ndescribe('Testing numbers', () => {\n  it('1 is equal to 1', () => {\n    expect(1 === 1).to.be.true;\n  });\n  it('2 is equal to 2', () => {\n    expect(2 === 2).to.be.true;\n  });\n  it('1 is equal to 3', () => {\n    expect(1 === 3).to.be.true;\n  });\n  it.skip('3 is equal to 3', () => {\n    expect(3 === 3).to.be.true;\n  });\n  it('4 is equal to 4', () => {\n    expect(4 === 4).to.be.true;\n  });\n  it('5 is equal to 5', () => {\n    expect(5 === 5).to.be.true;\n  });\n  it('6 is equal to 6', () => {\n    expect(6 === 6).to.be.true;\n  });\n  it('7 is equal to 7', () => {\n    expect(7 === 7).to.be.true;\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHBlY3QiLCJyZXF1aXJlIiwiZGVzY3JpYmUiLCJpdCIsInRvIiwiYmUiLCJ0cnVlIiwic2tpcCJdLCJzb3VyY2VSb290IjoiL2FseC1iYWNrZW5kLWphdmFzY3JpcHQvMHgwNi11bml0dGVzdHNfaW5fanMvIiwic291cmNlcyI6WyI3LXNraXAudGVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGV4cGVjdCB9ID0gcmVxdWlyZSgnY2hhaScpO1xuXG5kZXNjcmliZSgnVGVzdGluZyBudW1iZXJzJywgKCkgPT4ge1xuICBpdCgnMSBpcyBlcXVhbCB0byAxJywgKCkgPT4ge1xuICAgIGV4cGVjdCgxID09PSAxKS50by5iZS50cnVlO1xuICB9KTtcblxuICBpdCgnMiBpcyBlcXVhbCB0byAyJywgKCkgPT4ge1xuICAgIGV4cGVjdCgyID09PSAyKS50by5iZS50cnVlO1xuICB9KTtcblxuICBpdCgnMSBpcyBlcXVhbCB0byAzJywgKCkgPT4ge1xuICAgIGV4cGVjdCgxID09PSAzKS50by5iZS50cnVlO1xuICB9KTtcblxuICBpdC5za2lwKCczIGlzIGVxdWFsIHRvIDMnLCAoKSA9PiB7XG4gICAgZXhwZWN0KDMgPT09IDMpLnRvLmJlLnRydWU7XG4gIH0pO1xuXG4gIGl0KCc0IGlzIGVxdWFsIHRvIDQnLCAoKSA9PiB7XG4gICAgZXhwZWN0KDQgPT09IDQpLnRvLmJlLnRydWU7XG4gIH0pO1xuXG4gIGl0KCc1IGlzIGVxdWFsIHRvIDUnLCAoKSA9PiB7XG4gICAgZXhwZWN0KDUgPT09IDUpLnRvLmJlLnRydWU7XG4gIH0pO1xuXG4gIGl0KCc2IGlzIGVxdWFsIHRvIDYnLCAoKSA9PiB7XG4gICAgZXhwZWN0KDYgPT09IDYpLnRvLmJlLnRydWU7XG4gIH0pO1xuXG4gIGl0KCc3IGlzIGVxdWFsIHRvIDcnLCAoKSA9PiB7XG4gICAgZXhwZWN0KDcgPT09IDcpLnRvLmJlLnRydWU7XG4gIH0pO1xufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07RUFBRUE7QUFBTyxDQUFDLEdBQUdDLE9BQU8sQ0FBQyxNQUFNLENBQUM7QUFFbENDLFFBQVEsQ0FBQyxpQkFBaUIsRUFBRSxNQUFNO0VBQ2hDQyxFQUFFLENBQUMsaUJBQWlCLEVBQUUsTUFBTTtJQUMxQkgsTUFBTSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQ0ksRUFBRSxDQUFDQyxFQUFFLENBQUNDLElBQUk7RUFDNUIsQ0FBQyxDQUFDO0VBRUZILEVBQUUsQ0FBQyxpQkFBaUIsRUFBRSxNQUFNO0lBQzFCSCxNQUFNLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDSSxFQUFFLENBQUNDLEVBQUUsQ0FBQ0MsSUFBSTtFQUM1QixDQUFDLENBQUM7RUFFRkgsRUFBRSxDQUFDLGlCQUFpQixFQUFFLE1BQU07SUFDMUJILE1BQU0sQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUNJLEVBQUUsQ0FBQ0MsRUFBRSxDQUFDQyxJQUFJO0VBQzVCLENBQUMsQ0FBQztFQUVGSCxFQUFFLENBQUNJLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxNQUFNO0lBQy9CUCxNQUFNLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDSSxFQUFFLENBQUNDLEVBQUUsQ0FBQ0MsSUFBSTtFQUM1QixDQUFDLENBQUM7RUFFRkgsRUFBRSxDQUFDLGlCQUFpQixFQUFFLE1BQU07SUFDMUJILE1BQU0sQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUNJLEVBQUUsQ0FBQ0MsRUFBRSxDQUFDQyxJQUFJO0VBQzVCLENBQUMsQ0FBQztFQUVGSCxFQUFFLENBQUMsaUJBQWlCLEVBQUUsTUFBTTtJQUMxQkgsTUFBTSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQ0ksRUFBRSxDQUFDQyxFQUFFLENBQUNDLElBQUk7RUFDNUIsQ0FBQyxDQUFDO0VBRUZILEVBQUUsQ0FBQyxpQkFBaUIsRUFBRSxNQUFNO0lBQzFCSCxNQUFNLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDSSxFQUFFLENBQUNDLEVBQUUsQ0FBQ0MsSUFBSTtFQUM1QixDQUFDLENBQUM7RUFFRkgsRUFBRSxDQUFDLGlCQUFpQixFQUFFLE1BQU07SUFDMUJILE1BQU0sQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUNJLEVBQUUsQ0FBQ0MsRUFBRSxDQUFDQyxJQUFJO0VBQzVCLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["expect","require","describe","it","to","be","true","skip"],"sourceRoot":"/alx-backend-javascript/0x06-unittests_in_js/","sources":["7-skip.test.js"],"sourcesContent":["const { expect } = require('chai');\n\ndescribe('Testing numbers', () => {\n  it('1 is equal to 1', () => {\n    expect(1 === 1).to.be.true;\n  });\n\n  it('2 is equal to 2', () => {\n    expect(2 === 2).to.be.true;\n  });\n\n  it('1 is equal to 3', () => {\n    expect(1 === 3).to.be.true;\n  });\n\n  it.skip('3 is equal to 3', () => {\n    expect(3 === 3).to.be.true;\n  });\n\n  it('4 is equal to 4', () => {\n    expect(4 === 4).to.be.true;\n  });\n\n  it('5 is equal to 5', () => {\n    expect(5 === 5).to.be.true;\n  });\n\n  it('6 is equal to 6', () => {\n    expect(6 === 6).to.be.true;\n  });\n\n  it('7 is equal to 7', () => {\n    expect(7 === 7).to.be.true;\n  });\n});\n"],"mappings":"AAAA,MAAM;EAAEA;AAAO,CAAC,GAAGC,OAAO,CAAC,MAAM,CAAC;AAElCC,QAAQ,CAAC,iBAAiB,EAAE,MAAM;EAChCC,EAAE,CAAC,iBAAiB,EAAE,MAAM;IAC1BH,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAACI,EAAE,CAACC,EAAE,CAACC,IAAI;EAC5B,CAAC,CAAC;EAEFH,EAAE,CAAC,iBAAiB,EAAE,MAAM;IAC1BH,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAACI,EAAE,CAACC,EAAE,CAACC,IAAI;EAC5B,CAAC,CAAC;EAEFH,EAAE,CAAC,iBAAiB,EAAE,MAAM;IAC1BH,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAACI,EAAE,CAACC,EAAE,CAACC,IAAI;EAC5B,CAAC,CAAC;EAEFH,EAAE,CAACI,IAAI,CAAC,iBAAiB,EAAE,MAAM;IAC/BP,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAACI,EAAE,CAACC,EAAE,CAACC,IAAI;EAC5B,CAAC,CAAC;EAEFH,EAAE,CAAC,iBAAiB,EAAE,MAAM;IAC1BH,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAACI,EAAE,CAACC,EAAE,CAACC,IAAI;EAC5B,CAAC,CAAC;EAEFH,EAAE,CAAC,iBAAiB,EAAE,MAAM;IAC1BH,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAACI,EAAE,CAACC,EAAE,CAACC,IAAI;EAC5B,CAAC,CAAC;EAEFH,EAAE,CAAC,iBAAiB,EAAE,MAAM;IAC1BH,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAACI,EAAE,CAACC,EAAE,CAACC,IAAI;EAC5B,CAAC,CAAC;EAEFH,EAAE,CAAC,iBAAiB,EAAE,MAAM;IAC1BH,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAACI,EAAE,CAACC,EAAE,CAACC,IAAI;EAC5B,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}},"mtime":1718930859904}}